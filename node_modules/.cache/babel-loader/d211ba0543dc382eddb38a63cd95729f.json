{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamj\\\\OneDrive\\\\Desktop\\\\crwn-clothing-app\\\\src\\\\components\\\\payment-form\\\\payment-form.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport Button, { BUTTON_TYPE_CLASSES } from \"../button/button.component\";\nimport { PaymentFormContainer, FormContainer } from \"./payment-form.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentForm = () => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const paymentHandler = async e => {\n    e.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    const response = await fetch('/.netlify/functions/create-payment-intent', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: 10000\n      })\n    }).then(res => res.json());\n    const {\n      paymentIntent: {\n        client_secret\n      }\n    } = response;\n    console.log(client_secret);\n    const paymentResult = await stripe.confirmCardPayment(client_secret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          name: 'Adam Abdul'\n        }\n      }\n    });\n\n    if (paymentResult.error) {\n      alert(paymentResult.error);\n    } else {\n      if (paymentResult.paymentIntent.status === 'succeeded') {\n        alert('Payment Successful');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PaymentFormContainer, {\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      onSubmit: paymentHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Credit Card Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        buttonType: BUTTON_TYPE_CLASSES.inverted,\n        children: \"Pay now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentForm, \"EKvoGMX7lxsZ5SGPpYu2aKFzClQ=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["C:/Users/adamj/OneDrive/Desktop/crwn-clothing-app/src/components/payment-form/payment-form.component.jsx"],"names":["CardElement","useStripe","useElements","Button","BUTTON_TYPE_CLASSES","PaymentFormContainer","FormContainer","PaymentForm","stripe","elements","paymentHandler","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","amount","then","res","json","paymentIntent","client_secret","console","log","paymentResult","confirmCardPayment","payment_method","card","getElement","billing_details","name","error","alert","status","inverted"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAmD,yBAAnD;AACA,OAAOC,MAAP,IAAgBC,mBAAhB,QAA0C,4BAA1C;AAEA,SAAQC,oBAAR,EAA8BC,aAA9B,QAAkD,uBAAlD;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,cAAc,GAAG,MAAOC,CAAP,IAAY;AAC/BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAG,CAACJ,MAAD,IAAW,CAACC,QAAf,EAAwB;AACpB;AACH;;AACD,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAAD,EAA8C;AACpEC,MAAAA,MAAM,EAAE,MAD4D;AAEpEC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF2D;AAKpEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAf;AAL8D,KAA9C,CAAL,CAMpBC,IANoB,CAMfC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EANS,CAAvB;AAQA,UAAM;AAACC,MAAAA,aAAa,EAAE;AAACC,QAAAA;AAAD;AAAhB,QAAmCZ,QAAzC;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACA,UAAMG,aAAa,GAAG,MAAMpB,MAAM,CAACqB,kBAAP,CAA0BJ,aAA1B,EAAyC;AACjEK,MAAAA,cAAc,EAAE;AACZC,QAAAA,IAAI,EAAEtB,QAAQ,CAACuB,UAAT,CAAoBhC,WAApB,CADM;AAEZiC,QAAAA,eAAe,EAAE;AACbC,UAAAA,IAAI,EAAE;AADO;AAFL;AADiD,KAAzC,CAA5B;;AASA,QAAGN,aAAa,CAACO,KAAjB,EAAuB;AACnBC,MAAAA,KAAK,CAACR,aAAa,CAACO,KAAf,CAAL;AACH,KAFD,MAEK;AACD,UAAGP,aAAa,CAACJ,aAAd,CAA4Ba,MAA5B,KAAuC,WAA1C,EAAsD;AAClDD,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACH;AACJ;AACJ,GA/BD;;AAiCA,sBACE,QAAC,oBAAD;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAE1B,cAAzB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,MAAD;AAAQ,QAAA,UAAU,EAAEN,mBAAmB,CAACkC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA9CD;;GAAM/B,W;UACWN,S,EACEC,W;;;KAFbK,W;AAgDN,eAAeA,WAAf","sourcesContent":["import { CardElement, useStripe, useElements} from \"@stripe/react-stripe-js\"\r\nimport Button, {BUTTON_TYPE_CLASSES} from \"../button/button.component\"\r\n\r\nimport {PaymentFormContainer, FormContainer} from \"./payment-form.styles\"\r\n\r\n\r\nconst PaymentForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const paymentHandler = async (e) =>{\r\n      e.preventDefault();\r\n      if(!stripe || !elements){\r\n          return;\r\n      }\r\n      const response = await fetch('/.netlify/functions/create-payment-intent', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({amount: 10000})\r\n      }).then(res=> res.json());\r\n      \r\n      const {paymentIntent: {client_secret}} = response;\r\n      console.log(client_secret);\r\n      const paymentResult = await stripe.confirmCardPayment(client_secret, {\r\n          payment_method: {\r\n              card: elements.getElement(CardElement),\r\n              billing_details: {\r\n                  name: 'Adam Abdul'\r\n              }\r\n          }\r\n      });\r\n\r\n      if(paymentResult.error){\r\n          alert(paymentResult.error)\r\n      }else{\r\n          if(paymentResult.paymentIntent.status === 'succeeded'){\r\n              alert('Payment Successful')\r\n          }\r\n      }\r\n  }\r\n\r\n  return (\r\n    <PaymentFormContainer>\r\n        <FormContainer onSubmit={paymentHandler}>\r\n            <h2>Credit Card Payment</h2>\r\n            <CardElement/>\r\n            <Button buttonType={BUTTON_TYPE_CLASSES.inverted}>Pay now</Button>\r\n        </FormContainer>\r\n    </PaymentFormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentForm\r\n"]},"metadata":{},"sourceType":"module"}