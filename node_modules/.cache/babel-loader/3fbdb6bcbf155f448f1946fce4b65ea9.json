{"ast":null,"code":"export const CATEGORIES_INITIAL_STATE = {\n  categories: [],\n  isLoading: false,\n  error: null\n};\nexport const categoriesReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : CATEGORIES_INITIAL_STATE;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return CategoriesState => {// switch (action.type) {\n    //   case CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_START:\n    //     return {...state, isLoading: true};\n    //   case CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_SUCCESS:\n    //     return { ...state, isLoading: false, categories: action.payload };\n    //   case CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_FAILED:\n    //     return { ...state, isLoading: false, error: action.payload };\n    //   default:\n    //     return state;\n    // }\n  };\n};","map":{"version":3,"sources":["C:/Users/adamj/OneDrive/Desktop/crwn-clothing-app/src/store/categories/category.reducer.ts"],"names":["CATEGORIES_INITIAL_STATE","categories","isLoading","error","categoriesReducer","state","action","CategoriesState"],"mappings":"AAYA,OAAO,MAAMA,wBAAyC,GAAG;AACvDC,EAAAA,UAAU,EAAE,EAD2C;AAEvDC,EAAAA,SAAS,EAAE,KAF4C;AAGvDC,EAAAA,KAAK,EAAE;AAHgD,CAAlD;AAMP,OAAO,MAAMC,iBAAiB,GAAG;AAAA,MAC/BC,KAD+B,uEACvBL,wBADuB;AAAA,MAE/BM,MAF+B,uEAEtB,EAFsB;AAAA,SAG5BC,eAAe,IAAI,CAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAfgC;AAAA,CAA1B","sourcesContent":["import { AnyAction } from 'redux';\n\nimport { CATEGORIES_ACTION_TYPES, Category } from './category.types';\n\nimport { CategoryAction, fetchCategoriesStart, fetchCategoriesSuccess, fetchCategoriesFailed } from './category.action';\n\nexport type CategoriesState = {\n  readonly categories: Category[];\n  readonly isLoading: boolean;\n  readonly error: Error | null;\n};\n\nexport const CATEGORIES_INITIAL_STATE: CategoriesState = {\n  categories: [],\n  isLoading: false,\n  error: null,\n};\n\nexport const categoriesReducer = (\n  state = CATEGORIES_INITIAL_STATE,\n  action = {} as AnyAction\n) => CategoriesState => {\n\n  // switch (action.type) {\n  //   case CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_START:\n  //     return {...state, isLoading: true};\n  //   case CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_SUCCESS:\n  //     return { ...state, isLoading: false, categories: action.payload };\n  //   case CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_FAILED:\n  //     return { ...state, isLoading: false, error: action.payload };\n  //   default:\n  //     return state;\n  // }\n};\n"]},"metadata":{},"sourceType":"module"}