{"ast":null,"code":"'use strict';\n\nvar Driver = require('../driver');\n\nvar Connection = require('../connection');\n\nvar mysql = require('mysql');\n\nvar MySqlConnection = Connection.extend({\n  init: function (driver, db, createdConnection, opts) {\n    this._super(driver, opts);\n\n    this.db = db;\n    this.createdConnection = createdConnection;\n  },\n  close: function () {\n    if (this.createdConnection) {\n      this.db.end();\n    }\n  },\n  beginTransaction: function (callback) {\n    this._runSql([\"SET autocommit=0\", \"START TRANSACTION\"], callback);\n  },\n  commitTransaction: function (callback) {\n    this._runSql(\"COMMIT\", callback);\n  },\n  rollbackTransaction: function (callback) {\n    this._runSql(\"ROLLBACK\", callback);\n  },\n  updateLastId: function (results) {\n    if (results.insertId) {\n      results.lastId = results.insertId;\n    }\n\n    if (results.affectedRows) {\n      results.changes = results.affectedRows;\n    }\n  },\n  _runSql2: function (sql, callback) {\n    var self = this;\n    this.db.query(sql, function (err, results) {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      self.updateLastId(results);\n      callback(null, results);\n    });\n  },\n  _runSql3: function (sql, values, callback) {\n    var self = this;\n    this.db.query(sql, values, function (err, results) {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      self.updateLastId(results);\n      callback(null, results);\n    });\n  },\n  _runSqlAll: function (sql, params, callback) {\n    this._runSql(sql, params, callback);\n  },\n  _runSqlEach: function (sql, params, callback, doneCallback) {\n    // todo: check with the mysql project to see if there is a way to do \"each\" as opposed to getting all the results back\n    this._runSql(sql, params, function (err, rows) {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      var i;\n\n      for (i = 0; i < rows.length; i++) {\n        callback(null, rows[i]);\n      }\n\n      doneCallback();\n    });\n  }\n});\nvar MySqlDriver = Driver.extend({\n  init: function () {\n    this._super();\n  },\n  connect: function (opts, callback) {\n    var conn;\n\n    if (opts.db) {\n      conn = new MySqlConnection(this, opts.db, false, opts);\n      callback(null, conn);\n    } else {\n      var db;\n\n      if (typeof mysql.createConnection === 'undefined') {\n        db = new mysql.createClient(opts);\n      } else {\n        db = new mysql.createConnection(opts);\n        db.connect(function (err) {\n          if (err) {\n            console.log(err);\n          }\n        });\n      }\n\n      conn = new MySqlConnection(this, db, true, opts);\n      callback(null, conn);\n    }\n  },\n  escapeColumnName: function (columnName) {\n    return '`' + columnName + '`';\n  }\n});\nmodule.exports = MySqlDriver;","map":{"version":3,"sources":["C:/Users/adamj/OneDrive/Desktop/crwn-clothing-app/node_modules/persist/lib/drivers/mysql.js"],"names":["Driver","require","Connection","mysql","MySqlConnection","extend","init","driver","db","createdConnection","opts","_super","close","end","beginTransaction","callback","_runSql","commitTransaction","rollbackTransaction","updateLastId","results","insertId","lastId","affectedRows","changes","_runSql2","sql","self","query","err","_runSql3","values","_runSqlAll","params","_runSqlEach","doneCallback","rows","i","length","MySqlDriver","connect","conn","createConnection","createClient","console","log","escapeColumnName","columnName","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Driver = require('../driver');\nvar Connection = require('../connection');\nvar mysql = require('mysql');\n\nvar MySqlConnection = Connection.extend({\n  init: function (driver, db, createdConnection, opts) {\n    this._super(driver, opts);\n    this.db = db;\n    this.createdConnection = createdConnection;\n  },\n\n  close: function () {\n    if (this.createdConnection) {\n      this.db.end();\n    }\n  },\n\n  beginTransaction: function (callback) {\n    this._runSql([\"SET autocommit=0\", \"START TRANSACTION\"], callback);\n  },\n\n  commitTransaction: function (callback) {\n    this._runSql(\"COMMIT\", callback);\n  },\n\n  rollbackTransaction: function (callback) {\n    this._runSql(\"ROLLBACK\", callback);\n  },\n\n  updateLastId: function (results) {\n    if (results.insertId) {\n      results.lastId = results.insertId;\n    }\n    if (results.affectedRows) {\n      results.changes = results.affectedRows;\n    }\n  },\n\n  _runSql2: function (sql, callback) {\n    var self = this;\n    this.db.query(sql, function (err, results) {\n      if (err) {\n        callback(err);\n        return;\n      }\n      self.updateLastId(results);\n      callback(null, results);\n    });\n  },\n\n  _runSql3: function (sql, values, callback) {\n    var self = this;\n    this.db.query(sql, values, function (err, results) {\n      if (err) {\n        callback(err);\n        return;\n      }\n      self.updateLastId(results);\n      callback(null, results);\n    });\n  },\n\n  _runSqlAll: function (sql, params, callback) {\n    this._runSql(sql, params, callback);\n  },\n\n  _runSqlEach: function (sql, params, callback, doneCallback) {\n    // todo: check with the mysql project to see if there is a way to do \"each\" as opposed to getting all the results back\n    this._runSql(sql, params, function (err, rows) {\n      if (err) {\n        callback(err);\n        return;\n      }\n      var i;\n      for (i = 0; i < rows.length; i++) {\n        callback(null, rows[i]);\n      }\n      doneCallback();\n    });\n  }\n});\n\nvar MySqlDriver = Driver.extend({\n  init: function () {\n    this._super();\n  },\n\n  connect: function (opts, callback) {\n    var conn;\n    if (opts.db) {\n      conn = new MySqlConnection(this, opts.db, false, opts);\n      callback(null, conn);\n    } else {\n      var db;\n      if (typeof(mysql.createConnection) === 'undefined') {\n        db = new mysql.createClient(opts);\n      } else {\n        db = new mysql.createConnection(opts);\n        db.connect(function(err) {\n          if (err) {\n            console.log(err);\n          }\n        });\n      }\n      conn = new MySqlConnection(this, db, true, opts);\n      callback(null, conn);\n    }\n  },\n\n  escapeColumnName: function (columnName) {\n    return '`' + columnName + '`';\n  }\n});\n\nmodule.exports = MySqlDriver;\n"]},"metadata":{},"sourceType":"script"}