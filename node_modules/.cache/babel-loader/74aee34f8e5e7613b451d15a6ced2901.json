{"ast":null,"code":"import { compose, createStore, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // import logger from \"redux-logger\";\n\nimport { rootReducer } from \"./root-reducer\";\n\nconst loggerMiddleware = store => next => action => {\n  if (!action.type) {\n    return next(action);\n  }\n\n  next(action);\n};\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"user\"]\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middleWares = [loggerMiddleware];\nconst composedEnhancers = compose(applyMiddleware(...middleWares)); // root-reducer\n\nexport const store = createStore(persistedReducer, undefined, composedEnhancers);\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["C:/Users/adamj/OneDrive/Desktop/crwn-clothing-app/src/store/store.js"],"names":["compose","createStore","applyMiddleware","persistStore","persistReducer","storage","rootReducer","loggerMiddleware","store","next","action","type","persistConfig","key","blacklist","persistedReducer","middleWares","composedEnhancers","undefined","persistor"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,WAAlB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CACA;;AAEA,SAASC,WAAT,QAA4B,gBAA5B;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAYC,IAAD,IAAWC,MAAD,IAAY;AACxD,MAAI,CAACA,MAAM,CAACC,IAAZ,EAAkB;AAChB,WAAOF,IAAI,CAACC,MAAD,CAAX;AACD;;AACDD,EAAAA,IAAI,CAACC,MAAD,CAAJ;AACD,CALD;;AAOA,MAAME,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBR,EAAAA,OAFoB;AAGpBS,EAAAA,SAAS,EAAE,CAAC,MAAD;AAHS,CAAtB;AAMA,MAAMC,gBAAgB,GAAGX,cAAc,CAACQ,aAAD,EAAgBN,WAAhB,CAAvC;AAEA,MAAMU,WAAW,GAAG,CAACT,gBAAD,CAApB;AAEA,MAAMU,iBAAiB,GAAGjB,OAAO,CAACE,eAAe,CAAC,GAAGc,WAAJ,CAAhB,CAAjC,C,CAEA;;AACA,OAAO,MAAMR,KAAK,GAAGP,WAAW,CAC9Bc,gBAD8B,EAE9BG,SAF8B,EAG9BD,iBAH8B,CAAzB;AAMP,OAAO,MAAME,SAAS,GAAGhB,YAAY,CAACK,KAAD,CAA9B","sourcesContent":["import { compose, createStore, applyMiddleware } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n// import logger from \"redux-logger\";\r\n\r\nimport { rootReducer } from \"./root-reducer\";\r\n\r\nconst loggerMiddleware = (store) => (next) => (action) => {\r\n  if (!action.type) {\r\n    return next(action);\r\n  }\r\n  next(action);\r\n};\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  blacklist: [\"user\"],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst middleWares = [loggerMiddleware];\r\n\r\nconst composedEnhancers = compose(applyMiddleware(...middleWares));\r\n\r\n// root-reducer\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  undefined,\r\n  composedEnhancers\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\n"]},"metadata":{},"sourceType":"module"}