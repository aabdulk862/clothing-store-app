{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\adamj\\\\OneDrive\\\\Desktop\\\\crwn-clothing-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\defineProperty.js\";import _objectSpread from\"C:\\\\Users\\\\adamj\\\\OneDrive\\\\Desktop\\\\crwn-clothing-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _asyncToGenerator from\"C:\\\\Users\\\\adamj\\\\OneDrive\\\\Desktop\\\\crwn-clothing-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\adamj\\\\OneDrive\\\\Desktop\\\\crwn-clothing-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\adamj\\\\OneDrive\\\\Desktop\\\\crwn-clothing-app\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{useState}from'react';import FormInput from'../form-input/form-input.component';import Button,{BUTTON_TYPE_CLASSES}from'../button/button.component';import{signInAuthUserWithEmailAndPassword,signInWithGooglePopup}from'../../utils/firebase/firebase.utils';import{SignInContainer,ButtonsContainer}from'./sign-in-form.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var defaultFormFields={email:'',password:''};var SignInForm=function SignInForm(){var _useState=useState(defaultFormFields),_useState2=_slicedToArray(_useState,2),formFields=_useState2[0],setFormFields=_useState2[1];var email=formFields.email,password=formFields.password;var resetFormFields=function resetFormFields(){setFormFields(defaultFormFields);};var signInWithGoogle=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return signInWithGooglePopup();case 2:case\"end\":return _context.stop();}}},_callee);}));return function signInWithGoogle(){return _ref.apply(this,arguments);};}();var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:event.preventDefault();_context2.prev=1;_context2.next=4;return signInAuthUserWithEmailAndPassword(email,password);case 4:resetFormFields();_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](1);console.log('user sign in failed',_context2.t0);case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[1,7]]);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setFormFields(_objectSpread(_objectSpread({},formFields),{},_defineProperty({},name,value)));};return/*#__PURE__*/_jsxs(SignInContainer,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Already have an account?\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Sign in with your email and password\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(FormInput,{label:\"Email\",type:\"email\",required:true,onChange:handleChange,name:\"email\",value:email}),/*#__PURE__*/_jsx(FormInput,{label:\"Password\",type:\"password\",required:true,onChange:handleChange,name:\"password\",value:password}),/*#__PURE__*/_jsxs(ButtonsContainer,{children:[/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Sign In\"}),/*#__PURE__*/_jsx(Button,{buttonType:BUTTON_TYPE_CLASSES.google,type:\"button\",onClick:signInWithGoogle,children:\"Sign In With Google\"})]})]})]});};export default SignInForm;","map":{"version":3,"sources":["C:/Users/adamj/OneDrive/Desktop/crwn-clothing-app/src/components/sign-in-form/sign-in-form.component.jsx"],"names":["useState","FormInput","Button","BUTTON_TYPE_CLASSES","signInAuthUserWithEmailAndPassword","signInWithGooglePopup","SignInContainer","ButtonsContainer","defaultFormFields","email","password","SignInForm","formFields","setFormFields","resetFormFields","signInWithGoogle","handleSubmit","event","preventDefault","console","log","handleChange","target","name","value","google"],"mappings":"6tBAAA,OAASA,QAAT,KAAyB,OAAzB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,oCAAtB,CACA,MAAOC,CAAAA,MAAP,EAAiBC,mBAAjB,KAA4C,4BAA5C,CAEA,OACEC,kCADF,CAEEC,qBAFF,KAGO,qCAHP,CAKA,OAASC,eAAT,CAA0BC,gBAA1B,KAAkD,uBAAlD,C,wFAEA,GAAMC,CAAAA,iBAAiB,CAAG,CACxBC,KAAK,CAAE,EADiB,CAExBC,QAAQ,CAAE,EAFc,CAA1B,CAKA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,cAAoCX,QAAQ,CAACQ,iBAAD,CAA5C,wCAAOI,UAAP,eAAmBC,aAAnB,eACA,GAAQJ,CAAAA,KAAR,CAA4BG,UAA5B,CAAQH,KAAR,CAAeC,QAAf,CAA4BE,UAA5B,CAAeF,QAAf,CAEA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5BD,aAAa,CAACL,iBAAD,CAAb,CACD,CAFD,CAIA,GAAMO,CAAAA,gBAAgB,0FAAG,yJACjBV,CAAAA,qBAAqB,EADJ,uDAAH,kBAAhBU,CAAAA,gBAAgB,0CAAtB,CAIA,GAAMC,CAAAA,YAAY,2FAAG,kBAAOC,KAAP,sHACnBA,KAAK,CAACC,cAAN,GADmB,wCAIXd,CAAAA,kCAAkC,CAACK,KAAD,CAAQC,QAAR,CAJvB,QAKjBI,eAAe,GALE,mFAOjBK,OAAO,CAACC,GAAR,CAAY,qBAAZ,eAPiB,sEAAH,kBAAZJ,CAAAA,YAAY,6CAAlB,CAWA,GAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACJ,KAAD,CAAW,CAC9B,kBAAwBA,KAAK,CAACK,MAA9B,CAAQC,IAAR,eAAQA,IAAR,CAAcC,KAAd,eAAcA,KAAd,CAEAX,aAAa,gCAAMD,UAAN,wBAAmBW,IAAnB,CAA0BC,KAA1B,GAAb,CACD,CAJD,CAMA,mBACE,MAAC,eAAD,yBACE,gDADF,cAEE,8DAFF,cAGE,cAAM,QAAQ,CAAER,YAAhB,wBACE,KAAC,SAAD,EACE,KAAK,CAAC,OADR,CAEE,IAAI,CAAC,OAFP,CAGE,QAAQ,KAHV,CAIE,QAAQ,CAAEK,YAJZ,CAKE,IAAI,CAAC,OALP,CAME,KAAK,CAAEZ,KANT,EADF,cAUE,KAAC,SAAD,EACE,KAAK,CAAC,UADR,CAEE,IAAI,CAAC,UAFP,CAGE,QAAQ,KAHV,CAIE,QAAQ,CAAEY,YAJZ,CAKE,IAAI,CAAC,UALP,CAME,KAAK,CAAEX,QANT,EAVF,cAkBE,MAAC,gBAAD,yBACE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,qBADF,cAEE,KAAC,MAAD,EACE,UAAU,CAAEP,mBAAmB,CAACsB,MADlC,CAEE,IAAI,CAAC,QAFP,CAGE,OAAO,CAAEV,gBAHX,iCAFF,GAlBF,GAHF,GADF,CAmCD,CAhED,CAkEA,cAAeJ,CAAAA,UAAf","sourcesContent":["import { useState } from 'react';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport Button, { BUTTON_TYPE_CLASSES } from '../button/button.component';\r\n\r\nimport {\r\n  signInAuthUserWithEmailAndPassword,\r\n  signInWithGooglePopup,\r\n} from '../../utils/firebase/firebase.utils';\r\n\r\nimport { SignInContainer, ButtonsContainer } from './sign-in-form.styles';\r\n\r\nconst defaultFormFields = {\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nconst SignInForm = () => {\r\n  const [formFields, setFormFields] = useState(defaultFormFields);\r\n  const { email, password } = formFields;\r\n\r\n  const resetFormFields = () => {\r\n    setFormFields(defaultFormFields);\r\n  };\r\n\r\n  const signInWithGoogle = async () => {\r\n    await signInWithGooglePopup();\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await signInAuthUserWithEmailAndPassword(email, password);\r\n      resetFormFields();\r\n    } catch (error) {\r\n      console.log('user sign in failed', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormFields({ ...formFields, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignInContainer>\r\n      <h2>Already have an account?</h2>\r\n      <span>Sign in with your email and password</span>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          label='Email'\r\n          type='email'\r\n          required\r\n          onChange={handleChange}\r\n          name='email'\r\n          value={email}\r\n        />\r\n\r\n        <FormInput\r\n          label='Password'\r\n          type='password'\r\n          required\r\n          onChange={handleChange}\r\n          name='password'\r\n          value={password}\r\n        />\r\n        <ButtonsContainer>\r\n          <Button type='submit'>Sign In</Button>\r\n          <Button\r\n            buttonType={BUTTON_TYPE_CLASSES.google}\r\n            type='button'\r\n            onClick={signInWithGoogle}\r\n          >\r\n            Sign In With Google\r\n          </Button>\r\n        </ButtonsContainer>\r\n      </form>\r\n    </SignInContainer>\r\n  );\r\n};\r\n\r\nexport default SignInForm;"]},"metadata":{},"sourceType":"module"}