{"ast":null,"code":"/*global setTimeout: false, console: false */\n(function () {\n  var async = {}; // global on the server, window in the browser\n\n  var root = this,\n      previous_async = root.async;\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = async;\n  } else {\n    root.async = async;\n  }\n\n  async.noConflict = function () {\n    root.async = previous_async;\n    return async;\n  }; //// cross-browser compatiblity functions ////\n\n\n  var _forEach = function (arr, iterator) {\n    if (arr.forEach) {\n      return arr.forEach(iterator);\n    }\n\n    for (var i = 0; i < arr.length; i += 1) {\n      iterator(arr[i], i, arr);\n    }\n  };\n\n  var _map = function (arr, iterator) {\n    if (arr.map) {\n      return arr.map(iterator);\n    }\n\n    var results = [];\n\n    _forEach(arr, function (x, i, a) {\n      results.push(iterator(x, i, a));\n    });\n\n    return results;\n  };\n\n  var _reduce = function (arr, iterator, memo) {\n    if (arr.reduce) {\n      return arr.reduce(iterator, memo);\n    }\n\n    _forEach(arr, function (x, i, a) {\n      memo = iterator(memo, x, i, a);\n    });\n\n    return memo;\n  };\n\n  var _keys = function (obj) {\n    if (Object.keys) {\n      return Object.keys(obj);\n    }\n\n    var keys = [];\n\n    for (var k in obj) {\n      if (obj.hasOwnProperty(k)) {\n        keys.push(k);\n      }\n    }\n\n    return keys;\n  }; //// exported async module functions ////\n  //// nextTick implementation with browser-compatible fallback ////\n\n\n  if (typeof process === 'undefined' || !process.nextTick) {\n    async.nextTick = function (fn) {\n      setTimeout(fn, 0);\n    };\n  } else {\n    async.nextTick = process.nextTick;\n  }\n\n  async.forEach = function (arr, iterator, callback) {\n    callback = callback || function () {};\n\n    if (!arr.length) {\n      return callback();\n    }\n\n    var completed = 0;\n\n    _forEach(arr, function (x) {\n      iterator(x, function (err) {\n        if (err) {\n          callback(err);\n\n          callback = function () {};\n        } else {\n          completed += 1;\n\n          if (completed === arr.length) {\n            callback(null);\n          }\n        }\n      });\n    });\n  };\n\n  async.forEachSeries = function (arr, iterator, callback) {\n    callback = callback || function () {};\n\n    if (!arr.length) {\n      return callback();\n    }\n\n    var completed = 0;\n\n    var iterate = function () {\n      iterator(arr[completed], function (err) {\n        if (err) {\n          callback(err);\n\n          callback = function () {};\n        } else {\n          completed += 1;\n\n          if (completed === arr.length) {\n            callback(null);\n          } else {\n            iterate();\n          }\n        }\n      });\n    };\n\n    iterate();\n  };\n\n  async.forEachLimit = function (arr, limit, iterator, callback) {\n    callback = callback || function () {};\n\n    if (!arr.length || limit <= 0) {\n      return callback();\n    }\n\n    var completed = 0;\n    var started = 0;\n    var running = 0;\n\n    (function replenish() {\n      if (completed === arr.length) {\n        return callback();\n      }\n\n      while (running < limit && started < arr.length) {\n        started += 1;\n        running += 1;\n        iterator(arr[started - 1], function (err) {\n          if (err) {\n            callback(err);\n\n            callback = function () {};\n          } else {\n            completed += 1;\n            running -= 1;\n\n            if (completed === arr.length) {\n              callback();\n            } else {\n              replenish();\n            }\n          }\n        });\n      }\n    })();\n  };\n\n  var doParallel = function (fn) {\n    return function () {\n      var args = Array.prototype.slice.call(arguments);\n      return fn.apply(null, [async.forEach].concat(args));\n    };\n  };\n\n  var doSeries = function (fn) {\n    return function () {\n      var args = Array.prototype.slice.call(arguments);\n      return fn.apply(null, [async.forEachSeries].concat(args));\n    };\n  };\n\n  var _asyncMap = function (eachfn, arr, iterator, callback) {\n    var results = [];\n    arr = _map(arr, function (x, i) {\n      return {\n        index: i,\n        value: x\n      };\n    });\n    eachfn(arr, function (x, callback) {\n      iterator(x.value, function (err, v) {\n        results[x.index] = v;\n        callback(err);\n      });\n    }, function (err) {\n      callback(err, results);\n    });\n  };\n\n  async.map = doParallel(_asyncMap);\n  async.mapSeries = doSeries(_asyncMap); // reduce only has a series version, as doing reduce in parallel won't\n  // work in many situations.\n\n  async.reduce = function (arr, memo, iterator, callback) {\n    async.forEachSeries(arr, function (x, callback) {\n      iterator(memo, x, function (err, v) {\n        memo = v;\n        callback(err);\n      });\n    }, function (err) {\n      callback(err, memo);\n    });\n  }; // inject alias\n\n\n  async.inject = async.reduce; // foldl alias\n\n  async.foldl = async.reduce;\n\n  async.reduceRight = function (arr, memo, iterator, callback) {\n    var reversed = _map(arr, function (x) {\n      return x;\n    }).reverse();\n\n    async.reduce(reversed, memo, iterator, callback);\n  }; // foldr alias\n\n\n  async.foldr = async.reduceRight;\n\n  var _filter = function (eachfn, arr, iterator, callback) {\n    var results = [];\n    arr = _map(arr, function (x, i) {\n      return {\n        index: i,\n        value: x\n      };\n    });\n    eachfn(arr, function (x, callback) {\n      iterator(x.value, function (v) {\n        if (v) {\n          results.push(x);\n        }\n\n        callback();\n      });\n    }, function (err) {\n      callback(_map(results.sort(function (a, b) {\n        return a.index - b.index;\n      }), function (x) {\n        return x.value;\n      }));\n    });\n  };\n\n  async.filter = doParallel(_filter);\n  async.filterSeries = doSeries(_filter); // select alias\n\n  async.select = async.filter;\n  async.selectSeries = async.filterSeries;\n\n  var _reject = function (eachfn, arr, iterator, callback) {\n    var results = [];\n    arr = _map(arr, function (x, i) {\n      return {\n        index: i,\n        value: x\n      };\n    });\n    eachfn(arr, function (x, callback) {\n      iterator(x.value, function (v) {\n        if (!v) {\n          results.push(x);\n        }\n\n        callback();\n      });\n    }, function (err) {\n      callback(_map(results.sort(function (a, b) {\n        return a.index - b.index;\n      }), function (x) {\n        return x.value;\n      }));\n    });\n  };\n\n  async.reject = doParallel(_reject);\n  async.rejectSeries = doSeries(_reject);\n\n  var _detect = function (eachfn, arr, iterator, main_callback) {\n    eachfn(arr, function (x, callback) {\n      iterator(x, function (result) {\n        if (result) {\n          main_callback(x);\n\n          main_callback = function () {};\n        } else {\n          callback();\n        }\n      });\n    }, function (err) {\n      main_callback();\n    });\n  };\n\n  async.detect = doParallel(_detect);\n  async.detectSeries = doSeries(_detect);\n\n  async.some = function (arr, iterator, main_callback) {\n    async.forEach(arr, function (x, callback) {\n      iterator(x, function (v) {\n        if (v) {\n          main_callback(true);\n\n          main_callback = function () {};\n        }\n\n        callback();\n      });\n    }, function (err) {\n      main_callback(false);\n    });\n  }; // any alias\n\n\n  async.any = async.some;\n\n  async.every = function (arr, iterator, main_callback) {\n    async.forEach(arr, function (x, callback) {\n      iterator(x, function (v) {\n        if (!v) {\n          main_callback(false);\n\n          main_callback = function () {};\n        }\n\n        callback();\n      });\n    }, function (err) {\n      main_callback(true);\n    });\n  }; // all alias\n\n\n  async.all = async.every;\n\n  async.sortBy = function (arr, iterator, callback) {\n    async.map(arr, function (x, callback) {\n      iterator(x, function (err, criteria) {\n        if (err) {\n          callback(err);\n        } else {\n          callback(null, {\n            value: x,\n            criteria: criteria\n          });\n        }\n      });\n    }, function (err, results) {\n      if (err) {\n        return callback(err);\n      } else {\n        var fn = function (left, right) {\n          var a = left.criteria,\n              b = right.criteria;\n          return a < b ? -1 : a > b ? 1 : 0;\n        };\n\n        callback(null, _map(results.sort(fn), function (x) {\n          return x.value;\n        }));\n      }\n    });\n  };\n\n  async.auto = function (tasks, callback) {\n    callback = callback || function () {};\n\n    var keys = _keys(tasks);\n\n    if (!keys.length) {\n      return callback(null);\n    }\n\n    var results = {};\n    var listeners = [];\n\n    var addListener = function (fn) {\n      listeners.unshift(fn);\n    };\n\n    var removeListener = function (fn) {\n      for (var i = 0; i < listeners.length; i += 1) {\n        if (listeners[i] === fn) {\n          listeners.splice(i, 1);\n          return;\n        }\n      }\n    };\n\n    var taskComplete = function () {\n      _forEach(listeners.slice(0), function (fn) {\n        fn();\n      });\n    };\n\n    addListener(function () {\n      if (_keys(results).length === keys.length) {\n        callback(null, results);\n\n        callback = function () {};\n      }\n    });\n\n    _forEach(keys, function (k) {\n      var task = tasks[k] instanceof Function ? [tasks[k]] : tasks[k];\n\n      var taskCallback = function (err) {\n        if (err) {\n          callback(err); // stop subsequent errors hitting callback multiple times\n\n          callback = function () {};\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n\n          if (args.length <= 1) {\n            args = args[0];\n          }\n\n          results[k] = args;\n          taskComplete();\n        }\n      };\n\n      var requires = task.slice(0, Math.abs(task.length - 1)) || [];\n\n      var ready = function () {\n        return _reduce(requires, function (a, x) {\n          return a && results.hasOwnProperty(x);\n        }, true) && !results.hasOwnProperty(k);\n      };\n\n      if (ready()) {\n        task[task.length - 1](taskCallback, results);\n      } else {\n        var listener = function () {\n          if (ready()) {\n            removeListener(listener);\n            task[task.length - 1](taskCallback, results);\n          }\n        };\n\n        addListener(listener);\n      }\n    });\n  };\n\n  async.waterfall = function (tasks, callback) {\n    callback = callback || function () {};\n\n    if (!tasks.length) {\n      return callback();\n    }\n\n    var wrapIterator = function (iterator) {\n      return function (err) {\n        if (err) {\n          callback(err);\n\n          callback = function () {};\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var next = iterator.next();\n\n          if (next) {\n            args.push(wrapIterator(next));\n          } else {\n            args.push(callback);\n          }\n\n          async.nextTick(function () {\n            iterator.apply(null, args);\n          });\n        }\n      };\n    };\n\n    wrapIterator(async.iterator(tasks))();\n  };\n\n  async.parallel = function (tasks, callback) {\n    callback = callback || function () {};\n\n    if (tasks.constructor === Array) {\n      async.map(tasks, function (fn, callback) {\n        if (fn) {\n          fn(function (err) {\n            var args = Array.prototype.slice.call(arguments, 1);\n\n            if (args.length <= 1) {\n              args = args[0];\n            }\n\n            callback.call(null, err, args);\n          });\n        }\n      }, callback);\n    } else {\n      var results = {};\n      async.forEach(_keys(tasks), function (k, callback) {\n        tasks[k](function (err) {\n          var args = Array.prototype.slice.call(arguments, 1);\n\n          if (args.length <= 1) {\n            args = args[0];\n          }\n\n          results[k] = args;\n          callback(err);\n        });\n      }, function (err) {\n        callback(err, results);\n      });\n    }\n  };\n\n  async.series = function (tasks, callback) {\n    callback = callback || function () {};\n\n    if (tasks.constructor === Array) {\n      async.mapSeries(tasks, function (fn, callback) {\n        if (fn) {\n          fn(function (err) {\n            var args = Array.prototype.slice.call(arguments, 1);\n\n            if (args.length <= 1) {\n              args = args[0];\n            }\n\n            callback.call(null, err, args);\n          });\n        }\n      }, callback);\n    } else {\n      var results = {};\n      async.forEachSeries(_keys(tasks), function (k, callback) {\n        tasks[k](function (err) {\n          var args = Array.prototype.slice.call(arguments, 1);\n\n          if (args.length <= 1) {\n            args = args[0];\n          }\n\n          results[k] = args;\n          callback(err);\n        });\n      }, function (err) {\n        callback(err, results);\n      });\n    }\n  };\n\n  async.iterator = function (tasks) {\n    var makeCallback = function (index) {\n      var fn = function () {\n        if (tasks.length) {\n          tasks[index].apply(null, arguments);\n        }\n\n        return fn.next();\n      };\n\n      fn.next = function () {\n        return index < tasks.length - 1 ? makeCallback(index + 1) : null;\n      };\n\n      return fn;\n    };\n\n    return makeCallback(0);\n  };\n\n  async.apply = function (fn) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return function () {\n      return fn.apply(null, args.concat(Array.prototype.slice.call(arguments)));\n    };\n  };\n\n  var _concat = function (eachfn, arr, fn, callback) {\n    var r = [];\n    eachfn(arr, function (x, cb) {\n      fn(x, function (err, y) {\n        r = r.concat(y || []);\n        cb(err);\n      });\n    }, function (err) {\n      callback(err, r);\n    });\n  };\n\n  async.concat = doParallel(_concat);\n  async.concatSeries = doSeries(_concat);\n\n  async.whilst = function (test, iterator, callback) {\n    if (test()) {\n      iterator(function (err) {\n        if (err) {\n          return callback(err);\n        }\n\n        async.whilst(test, iterator, callback);\n      });\n    } else {\n      callback();\n    }\n  };\n\n  async.until = function (test, iterator, callback) {\n    if (!test()) {\n      iterator(function (err) {\n        if (err) {\n          return callback(err);\n        }\n\n        async.until(test, iterator, callback);\n      });\n    } else {\n      callback();\n    }\n  };\n\n  async.queue = function (worker, concurrency) {\n    var workers = 0;\n    var q = {\n      tasks: [],\n      concurrency: concurrency,\n      saturated: null,\n      empty: null,\n      drain: null,\n      push: function (data, callback) {\n        if (data.constructor !== Array) {\n          data = [data];\n        }\n\n        _forEach(data, function (task) {\n          q.tasks.push({\n            data: task,\n            callback: typeof callback === 'function' ? callback : null\n          });\n\n          if (q.saturated && q.tasks.length == concurrency) {\n            q.saturated();\n          }\n\n          async.nextTick(q.process);\n        });\n      },\n      process: function () {\n        if (workers < q.concurrency && q.tasks.length) {\n          var task = q.tasks.shift();\n          if (q.empty && q.tasks.length == 0) q.empty();\n          workers += 1;\n          worker(task.data, function () {\n            workers -= 1;\n\n            if (task.callback) {\n              task.callback.apply(task, arguments);\n            }\n\n            if (q.drain && q.tasks.length + workers == 0) q.drain();\n            q.process();\n          });\n        }\n      },\n      length: function () {\n        return q.tasks.length;\n      },\n      running: function () {\n        return workers;\n      }\n    };\n    return q;\n  };\n\n  var _console_fn = function (name) {\n    return function (fn) {\n      var args = Array.prototype.slice.call(arguments, 1);\n      fn.apply(null, args.concat([function (err) {\n        var args = Array.prototype.slice.call(arguments, 1);\n\n        if (typeof console !== 'undefined') {\n          if (err) {\n            if (console.error) {\n              console.error(err);\n            }\n          } else if (console[name]) {\n            _forEach(args, function (x) {\n              console[name](x);\n            });\n          }\n        }\n      }]));\n    };\n  };\n\n  async.log = _console_fn('log');\n  async.dir = _console_fn('dir');\n  /*async.info = _console_fn('info');\n  async.warn = _console_fn('warn');\n  async.error = _console_fn('error');*/\n\n  async.memoize = function (fn, hasher) {\n    var memo = {};\n    var queues = {};\n\n    hasher = hasher || function (x) {\n      return x;\n    };\n\n    var memoized = function () {\n      var args = Array.prototype.slice.call(arguments);\n      var callback = args.pop();\n      var key = hasher.apply(null, args);\n\n      if (key in memo) {\n        callback.apply(null, memo[key]);\n      } else if (key in queues) {\n        queues[key].push(callback);\n      } else {\n        queues[key] = [callback];\n        fn.apply(null, args.concat([function () {\n          memo[key] = arguments;\n          var q = queues[key];\n          delete queues[key];\n\n          for (var i = 0, l = q.length; i < l; i++) {\n            q[i].apply(null, arguments);\n          }\n        }]));\n      }\n    };\n\n    memoized.unmemoized = fn;\n    return memoized;\n  };\n\n  async.unmemoize = function (fn) {\n    return function () {\n      return (fn.unmemoized || fn).apply(null, arguments);\n    };\n  };\n})();","map":{"version":3,"sources":["C:/Users/adamj/OneDrive/Desktop/crwn-clothing-app/node_modules/db-info/node_modules/async/lib/async.js"],"names":["async","root","previous_async","module","exports","noConflict","_forEach","arr","iterator","forEach","i","length","_map","map","results","x","a","push","_reduce","memo","reduce","_keys","obj","Object","keys","k","hasOwnProperty","process","nextTick","fn","setTimeout","callback","completed","err","forEachSeries","iterate","forEachLimit","limit","started","running","replenish","doParallel","args","Array","prototype","slice","call","arguments","apply","concat","doSeries","_asyncMap","eachfn","index","value","v","mapSeries","inject","foldl","reduceRight","reversed","reverse","foldr","_filter","sort","b","filter","filterSeries","select","selectSeries","_reject","reject","rejectSeries","_detect","main_callback","result","detect","detectSeries","some","any","every","all","sortBy","criteria","left","right","auto","tasks","listeners","addListener","unshift","removeListener","splice","taskComplete","task","Function","taskCallback","requires","Math","abs","ready","listener","waterfall","wrapIterator","next","parallel","constructor","series","makeCallback","_concat","r","cb","y","concatSeries","whilst","test","until","queue","worker","concurrency","workers","q","saturated","empty","drain","data","shift","_console_fn","name","console","error","log","dir","memoize","hasher","queues","memoized","pop","key","l","unmemoized","unmemoize"],"mappings":"AAAA;AACC,aAAY;AAET,MAAIA,KAAK,GAAG,EAAZ,CAFS,CAIT;;AACA,MAAIC,IAAI,GAAG,IAAX;AAAA,MACIC,cAAc,GAAGD,IAAI,CAACD,KAD1B;;AAGA,MAAI,OAAOG,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,OAA5C,EAAqD;AACjDD,IAAAA,MAAM,CAACC,OAAP,GAAiBJ,KAAjB;AACH,GAFD,MAGK;AACDC,IAAAA,IAAI,CAACD,KAAL,GAAaA,KAAb;AACH;;AAEDA,EAAAA,KAAK,CAACK,UAAN,GAAmB,YAAY;AAC3BJ,IAAAA,IAAI,CAACD,KAAL,GAAaE,cAAb;AACA,WAAOF,KAAP;AACH,GAHD,CAfS,CAoBT;;;AAEA,MAAIM,QAAQ,GAAG,UAAUC,GAAV,EAAeC,QAAf,EAAyB;AACpC,QAAID,GAAG,CAACE,OAAR,EAAiB;AACb,aAAOF,GAAG,CAACE,OAAJ,CAAYD,QAAZ,CAAP;AACH;;AACD,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgCD,CAAC,IAAI,CAArC,EAAwC;AACpCF,MAAAA,QAAQ,CAACD,GAAG,CAACG,CAAD,CAAJ,EAASA,CAAT,EAAYH,GAAZ,CAAR;AACH;AACJ,GAPD;;AASA,MAAIK,IAAI,GAAG,UAAUL,GAAV,EAAeC,QAAf,EAAyB;AAChC,QAAID,GAAG,CAACM,GAAR,EAAa;AACT,aAAON,GAAG,CAACM,GAAJ,CAAQL,QAAR,CAAP;AACH;;AACD,QAAIM,OAAO,GAAG,EAAd;;AACAR,IAAAA,QAAQ,CAACC,GAAD,EAAM,UAAUQ,CAAV,EAAaL,CAAb,EAAgBM,CAAhB,EAAmB;AAC7BF,MAAAA,OAAO,CAACG,IAAR,CAAaT,QAAQ,CAACO,CAAD,EAAIL,CAAJ,EAAOM,CAAP,CAArB;AACH,KAFO,CAAR;;AAGA,WAAOF,OAAP;AACH,GATD;;AAWA,MAAII,OAAO,GAAG,UAAUX,GAAV,EAAeC,QAAf,EAAyBW,IAAzB,EAA+B;AACzC,QAAIZ,GAAG,CAACa,MAAR,EAAgB;AACZ,aAAOb,GAAG,CAACa,MAAJ,CAAWZ,QAAX,EAAqBW,IAArB,CAAP;AACH;;AACDb,IAAAA,QAAQ,CAACC,GAAD,EAAM,UAAUQ,CAAV,EAAaL,CAAb,EAAgBM,CAAhB,EAAmB;AAC7BG,MAAAA,IAAI,GAAGX,QAAQ,CAACW,IAAD,EAAOJ,CAAP,EAAUL,CAAV,EAAaM,CAAb,CAAf;AACH,KAFO,CAAR;;AAGA,WAAOG,IAAP;AACH,GARD;;AAUA,MAAIE,KAAK,GAAG,UAAUC,GAAV,EAAe;AACvB,QAAIC,MAAM,CAACC,IAAX,EAAiB;AACb,aAAOD,MAAM,CAACC,IAAP,CAAYF,GAAZ,CAAP;AACH;;AACD,QAAIE,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAT,IAAcH,GAAd,EAAmB;AACf,UAAIA,GAAG,CAACI,cAAJ,CAAmBD,CAAnB,CAAJ,EAA2B;AACvBD,QAAAA,IAAI,CAACP,IAAL,CAAUQ,CAAV;AACH;AACJ;;AACD,WAAOD,IAAP;AACH,GAXD,CApDS,CAiET;AAEA;;;AACA,MAAI,OAAOG,OAAP,KAAmB,WAAnB,IAAkC,CAAEA,OAAO,CAACC,QAAhD,EAA2D;AACvD5B,IAAAA,KAAK,CAAC4B,QAAN,GAAiB,UAAUC,EAAV,EAAc;AAC3BC,MAAAA,UAAU,CAACD,EAAD,EAAK,CAAL,CAAV;AACH,KAFD;AAGH,GAJD,MAKK;AACD7B,IAAAA,KAAK,CAAC4B,QAAN,GAAiBD,OAAO,CAACC,QAAzB;AACH;;AAED5B,EAAAA,KAAK,CAACS,OAAN,GAAgB,UAAUF,GAAV,EAAeC,QAAf,EAAyBuB,QAAzB,EAAmC;AAC/CA,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,YAAY,CAAE,CAArC;;AACA,QAAI,CAACxB,GAAG,CAACI,MAAT,EAAiB;AACb,aAAOoB,QAAQ,EAAf;AACH;;AACD,QAAIC,SAAS,GAAG,CAAhB;;AACA1B,IAAAA,QAAQ,CAACC,GAAD,EAAM,UAAUQ,CAAV,EAAa;AACvBP,MAAAA,QAAQ,CAACO,CAAD,EAAI,UAAUkB,GAAV,EAAe;AACvB,YAAIA,GAAJ,EAAS;AACLF,UAAAA,QAAQ,CAACE,GAAD,CAAR;;AACAF,UAAAA,QAAQ,GAAG,YAAY,CAAE,CAAzB;AACH,SAHD,MAIK;AACDC,UAAAA,SAAS,IAAI,CAAb;;AACA,cAAIA,SAAS,KAAKzB,GAAG,CAACI,MAAtB,EAA8B;AAC1BoB,YAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ;AACJ,OAXO,CAAR;AAYH,KAbO,CAAR;AAcH,GApBD;;AAsBA/B,EAAAA,KAAK,CAACkC,aAAN,GAAsB,UAAU3B,GAAV,EAAeC,QAAf,EAAyBuB,QAAzB,EAAmC;AACrDA,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,YAAY,CAAE,CAArC;;AACA,QAAI,CAACxB,GAAG,CAACI,MAAT,EAAiB;AACb,aAAOoB,QAAQ,EAAf;AACH;;AACD,QAAIC,SAAS,GAAG,CAAhB;;AACA,QAAIG,OAAO,GAAG,YAAY;AACtB3B,MAAAA,QAAQ,CAACD,GAAG,CAACyB,SAAD,CAAJ,EAAiB,UAAUC,GAAV,EAAe;AACpC,YAAIA,GAAJ,EAAS;AACLF,UAAAA,QAAQ,CAACE,GAAD,CAAR;;AACAF,UAAAA,QAAQ,GAAG,YAAY,CAAE,CAAzB;AACH,SAHD,MAIK;AACDC,UAAAA,SAAS,IAAI,CAAb;;AACA,cAAIA,SAAS,KAAKzB,GAAG,CAACI,MAAtB,EAA8B;AAC1BoB,YAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,WAFD,MAGK;AACDI,YAAAA,OAAO;AACV;AACJ;AACJ,OAdO,CAAR;AAeH,KAhBD;;AAiBAA,IAAAA,OAAO;AACV,GAxBD;;AA0BAnC,EAAAA,KAAK,CAACoC,YAAN,GAAqB,UAAU7B,GAAV,EAAe8B,KAAf,EAAsB7B,QAAtB,EAAgCuB,QAAhC,EAA0C;AAC3DA,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,YAAY,CAAE,CAArC;;AACA,QAAI,CAACxB,GAAG,CAACI,MAAL,IAAe0B,KAAK,IAAI,CAA5B,EAA+B;AAC3B,aAAON,QAAQ,EAAf;AACH;;AACD,QAAIC,SAAS,GAAG,CAAhB;AACA,QAAIM,OAAO,GAAG,CAAd;AACA,QAAIC,OAAO,GAAG,CAAd;;AAEA,KAAC,SAASC,SAAT,GAAsB;AACnB,UAAIR,SAAS,KAAKzB,GAAG,CAACI,MAAtB,EAA8B;AAC1B,eAAOoB,QAAQ,EAAf;AACH;;AAED,aAAOQ,OAAO,GAAGF,KAAV,IAAmBC,OAAO,GAAG/B,GAAG,CAACI,MAAxC,EAAgD;AAC5C2B,QAAAA,OAAO,IAAI,CAAX;AACAC,QAAAA,OAAO,IAAI,CAAX;AACA/B,QAAAA,QAAQ,CAACD,GAAG,CAAC+B,OAAO,GAAG,CAAX,CAAJ,EAAmB,UAAUL,GAAV,EAAe;AACtC,cAAIA,GAAJ,EAAS;AACLF,YAAAA,QAAQ,CAACE,GAAD,CAAR;;AACAF,YAAAA,QAAQ,GAAG,YAAY,CAAE,CAAzB;AACH,WAHD,MAIK;AACDC,YAAAA,SAAS,IAAI,CAAb;AACAO,YAAAA,OAAO,IAAI,CAAX;;AACA,gBAAIP,SAAS,KAAKzB,GAAG,CAACI,MAAtB,EAA8B;AAC1BoB,cAAAA,QAAQ;AACX,aAFD,MAGK;AACDS,cAAAA,SAAS;AACZ;AACJ;AACJ,SAfO,CAAR;AAgBH;AACJ,KAzBD;AA0BH,GAnCD;;AAsCA,MAAIC,UAAU,GAAG,UAAUZ,EAAV,EAAc;AAC3B,WAAO,YAAY;AACf,UAAIa,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAX;AACA,aAAOlB,EAAE,CAACmB,KAAH,CAAS,IAAT,EAAe,CAAChD,KAAK,CAACS,OAAP,EAAgBwC,MAAhB,CAAuBP,IAAvB,CAAf,CAAP;AACH,KAHD;AAIH,GALD;;AAMA,MAAIQ,QAAQ,GAAG,UAAUrB,EAAV,EAAc;AACzB,WAAO,YAAY;AACf,UAAIa,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAX;AACA,aAAOlB,EAAE,CAACmB,KAAH,CAAS,IAAT,EAAe,CAAChD,KAAK,CAACkC,aAAP,EAAsBe,MAAtB,CAA6BP,IAA7B,CAAf,CAAP;AACH,KAHD;AAIH,GALD;;AAQA,MAAIS,SAAS,GAAG,UAAUC,MAAV,EAAkB7C,GAAlB,EAAuBC,QAAvB,EAAiCuB,QAAjC,EAA2C;AACvD,QAAIjB,OAAO,GAAG,EAAd;AACAP,IAAAA,GAAG,GAAGK,IAAI,CAACL,GAAD,EAAM,UAAUQ,CAAV,EAAaL,CAAb,EAAgB;AAC5B,aAAO;AAAC2C,QAAAA,KAAK,EAAE3C,CAAR;AAAW4C,QAAAA,KAAK,EAAEvC;AAAlB,OAAP;AACH,KAFS,CAAV;AAGAqC,IAAAA,MAAM,CAAC7C,GAAD,EAAM,UAAUQ,CAAV,EAAagB,QAAb,EAAuB;AAC/BvB,MAAAA,QAAQ,CAACO,CAAC,CAACuC,KAAH,EAAU,UAAUrB,GAAV,EAAesB,CAAf,EAAkB;AAChCzC,QAAAA,OAAO,CAACC,CAAC,CAACsC,KAAH,CAAP,GAAmBE,CAAnB;AACAxB,QAAAA,QAAQ,CAACE,GAAD,CAAR;AACH,OAHO,CAAR;AAIH,KALK,EAKH,UAAUA,GAAV,EAAe;AACdF,MAAAA,QAAQ,CAACE,GAAD,EAAMnB,OAAN,CAAR;AACH,KAPK,CAAN;AAQH,GAbD;;AAcAd,EAAAA,KAAK,CAACa,GAAN,GAAY4B,UAAU,CAACU,SAAD,CAAtB;AACAnD,EAAAA,KAAK,CAACwD,SAAN,GAAkBN,QAAQ,CAACC,SAAD,CAA1B,CAhMS,CAmMT;AACA;;AACAnD,EAAAA,KAAK,CAACoB,MAAN,GAAe,UAAUb,GAAV,EAAeY,IAAf,EAAqBX,QAArB,EAA+BuB,QAA/B,EAAyC;AACpD/B,IAAAA,KAAK,CAACkC,aAAN,CAAoB3B,GAApB,EAAyB,UAAUQ,CAAV,EAAagB,QAAb,EAAuB;AAC5CvB,MAAAA,QAAQ,CAACW,IAAD,EAAOJ,CAAP,EAAU,UAAUkB,GAAV,EAAesB,CAAf,EAAkB;AAChCpC,QAAAA,IAAI,GAAGoC,CAAP;AACAxB,QAAAA,QAAQ,CAACE,GAAD,CAAR;AACH,OAHO,CAAR;AAIH,KALD,EAKG,UAAUA,GAAV,EAAe;AACdF,MAAAA,QAAQ,CAACE,GAAD,EAAMd,IAAN,CAAR;AACH,KAPD;AAQH,GATD,CArMS,CA+MT;;;AACAnB,EAAAA,KAAK,CAACyD,MAAN,GAAezD,KAAK,CAACoB,MAArB,CAhNS,CAiNT;;AACApB,EAAAA,KAAK,CAAC0D,KAAN,GAAc1D,KAAK,CAACoB,MAApB;;AAEApB,EAAAA,KAAK,CAAC2D,WAAN,GAAoB,UAAUpD,GAAV,EAAeY,IAAf,EAAqBX,QAArB,EAA+BuB,QAA/B,EAAyC;AACzD,QAAI6B,QAAQ,GAAGhD,IAAI,CAACL,GAAD,EAAM,UAAUQ,CAAV,EAAa;AAClC,aAAOA,CAAP;AACH,KAFkB,CAAJ,CAEZ8C,OAFY,EAAf;;AAGA7D,IAAAA,KAAK,CAACoB,MAAN,CAAawC,QAAb,EAAuBzC,IAAvB,EAA6BX,QAA7B,EAAuCuB,QAAvC;AACH,GALD,CApNS,CA0NT;;;AACA/B,EAAAA,KAAK,CAAC8D,KAAN,GAAc9D,KAAK,CAAC2D,WAApB;;AAEA,MAAII,OAAO,GAAG,UAAUX,MAAV,EAAkB7C,GAAlB,EAAuBC,QAAvB,EAAiCuB,QAAjC,EAA2C;AACrD,QAAIjB,OAAO,GAAG,EAAd;AACAP,IAAAA,GAAG,GAAGK,IAAI,CAACL,GAAD,EAAM,UAAUQ,CAAV,EAAaL,CAAb,EAAgB;AAC5B,aAAO;AAAC2C,QAAAA,KAAK,EAAE3C,CAAR;AAAW4C,QAAAA,KAAK,EAAEvC;AAAlB,OAAP;AACH,KAFS,CAAV;AAGAqC,IAAAA,MAAM,CAAC7C,GAAD,EAAM,UAAUQ,CAAV,EAAagB,QAAb,EAAuB;AAC/BvB,MAAAA,QAAQ,CAACO,CAAC,CAACuC,KAAH,EAAU,UAAUC,CAAV,EAAa;AAC3B,YAAIA,CAAJ,EAAO;AACHzC,UAAAA,OAAO,CAACG,IAAR,CAAaF,CAAb;AACH;;AACDgB,QAAAA,QAAQ;AACX,OALO,CAAR;AAMH,KAPK,EAOH,UAAUE,GAAV,EAAe;AACdF,MAAAA,QAAQ,CAACnB,IAAI,CAACE,OAAO,CAACkD,IAAR,CAAa,UAAUhD,CAAV,EAAaiD,CAAb,EAAgB;AACvC,eAAOjD,CAAC,CAACqC,KAAF,GAAUY,CAAC,CAACZ,KAAnB;AACH,OAFa,CAAD,EAET,UAAUtC,CAAV,EAAa;AACb,eAAOA,CAAC,CAACuC,KAAT;AACH,OAJY,CAAL,CAAR;AAKH,KAbK,CAAN;AAcH,GAnBD;;AAoBAtD,EAAAA,KAAK,CAACkE,MAAN,GAAezB,UAAU,CAACsB,OAAD,CAAzB;AACA/D,EAAAA,KAAK,CAACmE,YAAN,GAAqBjB,QAAQ,CAACa,OAAD,CAA7B,CAlPS,CAmPT;;AACA/D,EAAAA,KAAK,CAACoE,MAAN,GAAepE,KAAK,CAACkE,MAArB;AACAlE,EAAAA,KAAK,CAACqE,YAAN,GAAqBrE,KAAK,CAACmE,YAA3B;;AAEA,MAAIG,OAAO,GAAG,UAAUlB,MAAV,EAAkB7C,GAAlB,EAAuBC,QAAvB,EAAiCuB,QAAjC,EAA2C;AACrD,QAAIjB,OAAO,GAAG,EAAd;AACAP,IAAAA,GAAG,GAAGK,IAAI,CAACL,GAAD,EAAM,UAAUQ,CAAV,EAAaL,CAAb,EAAgB;AAC5B,aAAO;AAAC2C,QAAAA,KAAK,EAAE3C,CAAR;AAAW4C,QAAAA,KAAK,EAAEvC;AAAlB,OAAP;AACH,KAFS,CAAV;AAGAqC,IAAAA,MAAM,CAAC7C,GAAD,EAAM,UAAUQ,CAAV,EAAagB,QAAb,EAAuB;AAC/BvB,MAAAA,QAAQ,CAACO,CAAC,CAACuC,KAAH,EAAU,UAAUC,CAAV,EAAa;AAC3B,YAAI,CAACA,CAAL,EAAQ;AACJzC,UAAAA,OAAO,CAACG,IAAR,CAAaF,CAAb;AACH;;AACDgB,QAAAA,QAAQ;AACX,OALO,CAAR;AAMH,KAPK,EAOH,UAAUE,GAAV,EAAe;AACdF,MAAAA,QAAQ,CAACnB,IAAI,CAACE,OAAO,CAACkD,IAAR,CAAa,UAAUhD,CAAV,EAAaiD,CAAb,EAAgB;AACvC,eAAOjD,CAAC,CAACqC,KAAF,GAAUY,CAAC,CAACZ,KAAnB;AACH,OAFa,CAAD,EAET,UAAUtC,CAAV,EAAa;AACb,eAAOA,CAAC,CAACuC,KAAT;AACH,OAJY,CAAL,CAAR;AAKH,KAbK,CAAN;AAcH,GAnBD;;AAoBAtD,EAAAA,KAAK,CAACuE,MAAN,GAAe9B,UAAU,CAAC6B,OAAD,CAAzB;AACAtE,EAAAA,KAAK,CAACwE,YAAN,GAAqBtB,QAAQ,CAACoB,OAAD,CAA7B;;AAEA,MAAIG,OAAO,GAAG,UAAUrB,MAAV,EAAkB7C,GAAlB,EAAuBC,QAAvB,EAAiCkE,aAAjC,EAAgD;AAC1DtB,IAAAA,MAAM,CAAC7C,GAAD,EAAM,UAAUQ,CAAV,EAAagB,QAAb,EAAuB;AAC/BvB,MAAAA,QAAQ,CAACO,CAAD,EAAI,UAAU4D,MAAV,EAAkB;AAC1B,YAAIA,MAAJ,EAAY;AACRD,UAAAA,aAAa,CAAC3D,CAAD,CAAb;;AACA2D,UAAAA,aAAa,GAAG,YAAY,CAAE,CAA9B;AACH,SAHD,MAIK;AACD3C,UAAAA,QAAQ;AACX;AACJ,OARO,CAAR;AASH,KAVK,EAUH,UAAUE,GAAV,EAAe;AACdyC,MAAAA,aAAa;AAChB,KAZK,CAAN;AAaH,GAdD;;AAeA1E,EAAAA,KAAK,CAAC4E,MAAN,GAAenC,UAAU,CAACgC,OAAD,CAAzB;AACAzE,EAAAA,KAAK,CAAC6E,YAAN,GAAqB3B,QAAQ,CAACuB,OAAD,CAA7B;;AAEAzE,EAAAA,KAAK,CAAC8E,IAAN,GAAa,UAAUvE,GAAV,EAAeC,QAAf,EAAyBkE,aAAzB,EAAwC;AACjD1E,IAAAA,KAAK,CAACS,OAAN,CAAcF,GAAd,EAAmB,UAAUQ,CAAV,EAAagB,QAAb,EAAuB;AACtCvB,MAAAA,QAAQ,CAACO,CAAD,EAAI,UAAUwC,CAAV,EAAa;AACrB,YAAIA,CAAJ,EAAO;AACHmB,UAAAA,aAAa,CAAC,IAAD,CAAb;;AACAA,UAAAA,aAAa,GAAG,YAAY,CAAE,CAA9B;AACH;;AACD3C,QAAAA,QAAQ;AACX,OANO,CAAR;AAOH,KARD,EAQG,UAAUE,GAAV,EAAe;AACdyC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAVD;AAWH,GAZD,CAhSS,CA6ST;;;AACA1E,EAAAA,KAAK,CAAC+E,GAAN,GAAY/E,KAAK,CAAC8E,IAAlB;;AAEA9E,EAAAA,KAAK,CAACgF,KAAN,GAAc,UAAUzE,GAAV,EAAeC,QAAf,EAAyBkE,aAAzB,EAAwC;AAClD1E,IAAAA,KAAK,CAACS,OAAN,CAAcF,GAAd,EAAmB,UAAUQ,CAAV,EAAagB,QAAb,EAAuB;AACtCvB,MAAAA,QAAQ,CAACO,CAAD,EAAI,UAAUwC,CAAV,EAAa;AACrB,YAAI,CAACA,CAAL,EAAQ;AACJmB,UAAAA,aAAa,CAAC,KAAD,CAAb;;AACAA,UAAAA,aAAa,GAAG,YAAY,CAAE,CAA9B;AACH;;AACD3C,QAAAA,QAAQ;AACX,OANO,CAAR;AAOH,KARD,EAQG,UAAUE,GAAV,EAAe;AACdyC,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH,KAVD;AAWH,GAZD,CAhTS,CA6TT;;;AACA1E,EAAAA,KAAK,CAACiF,GAAN,GAAYjF,KAAK,CAACgF,KAAlB;;AAEAhF,EAAAA,KAAK,CAACkF,MAAN,GAAe,UAAU3E,GAAV,EAAeC,QAAf,EAAyBuB,QAAzB,EAAmC;AAC9C/B,IAAAA,KAAK,CAACa,GAAN,CAAUN,GAAV,EAAe,UAAUQ,CAAV,EAAagB,QAAb,EAAuB;AAClCvB,MAAAA,QAAQ,CAACO,CAAD,EAAI,UAAUkB,GAAV,EAAekD,QAAf,EAAyB;AACjC,YAAIlD,GAAJ,EAAS;AACLF,UAAAA,QAAQ,CAACE,GAAD,CAAR;AACH,SAFD,MAGK;AACDF,UAAAA,QAAQ,CAAC,IAAD,EAAO;AAACuB,YAAAA,KAAK,EAAEvC,CAAR;AAAWoE,YAAAA,QAAQ,EAAEA;AAArB,WAAP,CAAR;AACH;AACJ,OAPO,CAAR;AAQH,KATD,EASG,UAAUlD,GAAV,EAAenB,OAAf,EAAwB;AACvB,UAAImB,GAAJ,EAAS;AACL,eAAOF,QAAQ,CAACE,GAAD,CAAf;AACH,OAFD,MAGK;AACD,YAAIJ,EAAE,GAAG,UAAUuD,IAAV,EAAgBC,KAAhB,EAAuB;AAC5B,cAAIrE,CAAC,GAAGoE,IAAI,CAACD,QAAb;AAAA,cAAuBlB,CAAC,GAAGoB,KAAK,CAACF,QAAjC;AACA,iBAAOnE,CAAC,GAAGiD,CAAJ,GAAQ,CAAC,CAAT,GAAajD,CAAC,GAAGiD,CAAJ,GAAQ,CAAR,GAAY,CAAhC;AACH,SAHD;;AAIAlC,QAAAA,QAAQ,CAAC,IAAD,EAAOnB,IAAI,CAACE,OAAO,CAACkD,IAAR,CAAanC,EAAb,CAAD,EAAmB,UAAUd,CAAV,EAAa;AAC/C,iBAAOA,CAAC,CAACuC,KAAT;AACH,SAFkB,CAAX,CAAR;AAGH;AACJ,KAtBD;AAuBH,GAxBD;;AA0BAtD,EAAAA,KAAK,CAACsF,IAAN,GAAa,UAAUC,KAAV,EAAiBxD,QAAjB,EAA2B;AACpCA,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,YAAY,CAAE,CAArC;;AACA,QAAIP,IAAI,GAAGH,KAAK,CAACkE,KAAD,CAAhB;;AACA,QAAI,CAAC/D,IAAI,CAACb,MAAV,EAAkB;AACd,aAAOoB,QAAQ,CAAC,IAAD,CAAf;AACH;;AAED,QAAIjB,OAAO,GAAG,EAAd;AAEA,QAAI0E,SAAS,GAAG,EAAhB;;AACA,QAAIC,WAAW,GAAG,UAAU5D,EAAV,EAAc;AAC5B2D,MAAAA,SAAS,CAACE,OAAV,CAAkB7D,EAAlB;AACH,KAFD;;AAGA,QAAI8D,cAAc,GAAG,UAAU9D,EAAV,EAAc;AAC/B,WAAK,IAAInB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8E,SAAS,CAAC7E,MAA9B,EAAsCD,CAAC,IAAI,CAA3C,EAA8C;AAC1C,YAAI8E,SAAS,CAAC9E,CAAD,CAAT,KAAiBmB,EAArB,EAAyB;AACrB2D,UAAAA,SAAS,CAACI,MAAV,CAAiBlF,CAAjB,EAAoB,CAApB;AACA;AACH;AACJ;AACJ,KAPD;;AAQA,QAAImF,YAAY,GAAG,YAAY;AAC3BvF,MAAAA,QAAQ,CAACkF,SAAS,CAAC3C,KAAV,CAAgB,CAAhB,CAAD,EAAqB,UAAUhB,EAAV,EAAc;AACvCA,QAAAA,EAAE;AACL,OAFO,CAAR;AAGH,KAJD;;AAMA4D,IAAAA,WAAW,CAAC,YAAY;AACpB,UAAIpE,KAAK,CAACP,OAAD,CAAL,CAAeH,MAAf,KAA0Ba,IAAI,CAACb,MAAnC,EAA2C;AACvCoB,QAAAA,QAAQ,CAAC,IAAD,EAAOjB,OAAP,CAAR;;AACAiB,QAAAA,QAAQ,GAAG,YAAY,CAAE,CAAzB;AACH;AACJ,KALU,CAAX;;AAOAzB,IAAAA,QAAQ,CAACkB,IAAD,EAAO,UAAUC,CAAV,EAAa;AACxB,UAAIqE,IAAI,GAAIP,KAAK,CAAC9D,CAAD,CAAL,YAAoBsE,QAArB,GAAiC,CAACR,KAAK,CAAC9D,CAAD,CAAN,CAAjC,GAA6C8D,KAAK,CAAC9D,CAAD,CAA7D;;AACA,UAAIuE,YAAY,GAAG,UAAU/D,GAAV,EAAe;AAC9B,YAAIA,GAAJ,EAAS;AACLF,UAAAA,QAAQ,CAACE,GAAD,CAAR,CADK,CAEL;;AACAF,UAAAA,QAAQ,GAAG,YAAY,CAAE,CAAzB;AACH,SAJD,MAKK;AACD,cAAIW,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAX;;AACA,cAAIL,IAAI,CAAC/B,MAAL,IAAe,CAAnB,EAAsB;AAClB+B,YAAAA,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAX;AACH;;AACD5B,UAAAA,OAAO,CAACW,CAAD,CAAP,GAAaiB,IAAb;AACAmD,UAAAA,YAAY;AACf;AACJ,OAdD;;AAeA,UAAII,QAAQ,GAAGH,IAAI,CAACjD,KAAL,CAAW,CAAX,EAAcqD,IAAI,CAACC,GAAL,CAASL,IAAI,CAACnF,MAAL,GAAc,CAAvB,CAAd,KAA4C,EAA3D;;AACA,UAAIyF,KAAK,GAAG,YAAY;AACpB,eAAOlF,OAAO,CAAC+E,QAAD,EAAW,UAAUjF,CAAV,EAAaD,CAAb,EAAgB;AACrC,iBAAQC,CAAC,IAAIF,OAAO,CAACY,cAAR,CAAuBX,CAAvB,CAAb;AACH,SAFa,EAEX,IAFW,CAAP,IAEK,CAACD,OAAO,CAACY,cAAR,CAAuBD,CAAvB,CAFb;AAGH,OAJD;;AAKA,UAAI2E,KAAK,EAAT,EAAa;AACTN,QAAAA,IAAI,CAACA,IAAI,CAACnF,MAAL,GAAc,CAAf,CAAJ,CAAsBqF,YAAtB,EAAoClF,OAApC;AACH,OAFD,MAGK;AACD,YAAIuF,QAAQ,GAAG,YAAY;AACvB,cAAID,KAAK,EAAT,EAAa;AACTT,YAAAA,cAAc,CAACU,QAAD,CAAd;AACAP,YAAAA,IAAI,CAACA,IAAI,CAACnF,MAAL,GAAc,CAAf,CAAJ,CAAsBqF,YAAtB,EAAoClF,OAApC;AACH;AACJ,SALD;;AAMA2E,QAAAA,WAAW,CAACY,QAAD,CAAX;AACH;AACJ,KAnCO,CAAR;AAoCH,GAtED;;AAwEArG,EAAAA,KAAK,CAACsG,SAAN,GAAkB,UAAUf,KAAV,EAAiBxD,QAAjB,EAA2B;AACzCA,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,YAAY,CAAE,CAArC;;AACA,QAAI,CAACwD,KAAK,CAAC5E,MAAX,EAAmB;AACf,aAAOoB,QAAQ,EAAf;AACH;;AACD,QAAIwE,YAAY,GAAG,UAAU/F,QAAV,EAAoB;AACnC,aAAO,UAAUyB,GAAV,EAAe;AAClB,YAAIA,GAAJ,EAAS;AACLF,UAAAA,QAAQ,CAACE,GAAD,CAAR;;AACAF,UAAAA,QAAQ,GAAG,YAAY,CAAE,CAAzB;AACH,SAHD,MAIK;AACD,cAAIW,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAX;AACA,cAAIyD,IAAI,GAAGhG,QAAQ,CAACgG,IAAT,EAAX;;AACA,cAAIA,IAAJ,EAAU;AACN9D,YAAAA,IAAI,CAACzB,IAAL,CAAUsF,YAAY,CAACC,IAAD,CAAtB;AACH,WAFD,MAGK;AACD9D,YAAAA,IAAI,CAACzB,IAAL,CAAUc,QAAV;AACH;;AACD/B,UAAAA,KAAK,CAAC4B,QAAN,CAAe,YAAY;AACvBpB,YAAAA,QAAQ,CAACwC,KAAT,CAAe,IAAf,EAAqBN,IAArB;AACH,WAFD;AAGH;AACJ,OAlBD;AAmBH,KApBD;;AAqBA6D,IAAAA,YAAY,CAACvG,KAAK,CAACQ,QAAN,CAAe+E,KAAf,CAAD,CAAZ;AACH,GA3BD;;AA6BAvF,EAAAA,KAAK,CAACyG,QAAN,GAAiB,UAAUlB,KAAV,EAAiBxD,QAAjB,EAA2B;AACxCA,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,YAAY,CAAE,CAArC;;AACA,QAAIwD,KAAK,CAACmB,WAAN,KAAsB/D,KAA1B,EAAiC;AAC7B3C,MAAAA,KAAK,CAACa,GAAN,CAAU0E,KAAV,EAAiB,UAAU1D,EAAV,EAAcE,QAAd,EAAwB;AACrC,YAAIF,EAAJ,EAAQ;AACJA,UAAAA,EAAE,CAAC,UAAUI,GAAV,EAAe;AACd,gBAAIS,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAX;;AACA,gBAAIL,IAAI,CAAC/B,MAAL,IAAe,CAAnB,EAAsB;AAClB+B,cAAAA,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAX;AACH;;AACDX,YAAAA,QAAQ,CAACe,IAAT,CAAc,IAAd,EAAoBb,GAApB,EAAyBS,IAAzB;AACH,WANC,CAAF;AAOH;AACJ,OAVD,EAUGX,QAVH;AAWH,KAZD,MAaK;AACD,UAAIjB,OAAO,GAAG,EAAd;AACAd,MAAAA,KAAK,CAACS,OAAN,CAAcY,KAAK,CAACkE,KAAD,CAAnB,EAA4B,UAAU9D,CAAV,EAAaM,QAAb,EAAuB;AAC/CwD,QAAAA,KAAK,CAAC9D,CAAD,CAAL,CAAS,UAAUQ,GAAV,EAAe;AACpB,cAAIS,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAX;;AACA,cAAIL,IAAI,CAAC/B,MAAL,IAAe,CAAnB,EAAsB;AAClB+B,YAAAA,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAX;AACH;;AACD5B,UAAAA,OAAO,CAACW,CAAD,CAAP,GAAaiB,IAAb;AACAX,UAAAA,QAAQ,CAACE,GAAD,CAAR;AACH,SAPD;AAQH,OATD,EASG,UAAUA,GAAV,EAAe;AACdF,QAAAA,QAAQ,CAACE,GAAD,EAAMnB,OAAN,CAAR;AACH,OAXD;AAYH;AACJ,GA9BD;;AAgCAd,EAAAA,KAAK,CAAC2G,MAAN,GAAe,UAAUpB,KAAV,EAAiBxD,QAAjB,EAA2B;AACtCA,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,YAAY,CAAE,CAArC;;AACA,QAAIwD,KAAK,CAACmB,WAAN,KAAsB/D,KAA1B,EAAiC;AAC7B3C,MAAAA,KAAK,CAACwD,SAAN,CAAgB+B,KAAhB,EAAuB,UAAU1D,EAAV,EAAcE,QAAd,EAAwB;AAC3C,YAAIF,EAAJ,EAAQ;AACJA,UAAAA,EAAE,CAAC,UAAUI,GAAV,EAAe;AACd,gBAAIS,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAX;;AACA,gBAAIL,IAAI,CAAC/B,MAAL,IAAe,CAAnB,EAAsB;AAClB+B,cAAAA,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAX;AACH;;AACDX,YAAAA,QAAQ,CAACe,IAAT,CAAc,IAAd,EAAoBb,GAApB,EAAyBS,IAAzB;AACH,WANC,CAAF;AAOH;AACJ,OAVD,EAUGX,QAVH;AAWH,KAZD,MAaK;AACD,UAAIjB,OAAO,GAAG,EAAd;AACAd,MAAAA,KAAK,CAACkC,aAAN,CAAoBb,KAAK,CAACkE,KAAD,CAAzB,EAAkC,UAAU9D,CAAV,EAAaM,QAAb,EAAuB;AACrDwD,QAAAA,KAAK,CAAC9D,CAAD,CAAL,CAAS,UAAUQ,GAAV,EAAe;AACpB,cAAIS,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAX;;AACA,cAAIL,IAAI,CAAC/B,MAAL,IAAe,CAAnB,EAAsB;AAClB+B,YAAAA,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAX;AACH;;AACD5B,UAAAA,OAAO,CAACW,CAAD,CAAP,GAAaiB,IAAb;AACAX,UAAAA,QAAQ,CAACE,GAAD,CAAR;AACH,SAPD;AAQH,OATD,EASG,UAAUA,GAAV,EAAe;AACdF,QAAAA,QAAQ,CAACE,GAAD,EAAMnB,OAAN,CAAR;AACH,OAXD;AAYH;AACJ,GA9BD;;AAgCAd,EAAAA,KAAK,CAACQ,QAAN,GAAiB,UAAU+E,KAAV,EAAiB;AAC9B,QAAIqB,YAAY,GAAG,UAAUvD,KAAV,EAAiB;AAChC,UAAIxB,EAAE,GAAG,YAAY;AACjB,YAAI0D,KAAK,CAAC5E,MAAV,EAAkB;AACd4E,UAAAA,KAAK,CAAClC,KAAD,CAAL,CAAaL,KAAb,CAAmB,IAAnB,EAAyBD,SAAzB;AACH;;AACD,eAAOlB,EAAE,CAAC2E,IAAH,EAAP;AACH,OALD;;AAMA3E,MAAAA,EAAE,CAAC2E,IAAH,GAAU,YAAY;AAClB,eAAQnD,KAAK,GAAGkC,KAAK,CAAC5E,MAAN,GAAe,CAAxB,GAA6BiG,YAAY,CAACvD,KAAK,GAAG,CAAT,CAAzC,GAAsD,IAA7D;AACH,OAFD;;AAGA,aAAOxB,EAAP;AACH,KAXD;;AAYA,WAAO+E,YAAY,CAAC,CAAD,CAAnB;AACH,GAdD;;AAgBA5G,EAAAA,KAAK,CAACgD,KAAN,GAAc,UAAUnB,EAAV,EAAc;AACxB,QAAIa,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAX;AACA,WAAO,YAAY;AACf,aAAOlB,EAAE,CAACmB,KAAH,CACH,IADG,EACGN,IAAI,CAACO,MAAL,CAAYN,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAZ,CADH,CAAP;AAGH,KAJD;AAKH,GAPD;;AASA,MAAI8D,OAAO,GAAG,UAAUzD,MAAV,EAAkB7C,GAAlB,EAAuBsB,EAAvB,EAA2BE,QAA3B,EAAqC;AAC/C,QAAI+E,CAAC,GAAG,EAAR;AACA1D,IAAAA,MAAM,CAAC7C,GAAD,EAAM,UAAUQ,CAAV,EAAagG,EAAb,EAAiB;AACzBlF,MAAAA,EAAE,CAACd,CAAD,EAAI,UAAUkB,GAAV,EAAe+E,CAAf,EAAkB;AACpBF,QAAAA,CAAC,GAAGA,CAAC,CAAC7D,MAAF,CAAS+D,CAAC,IAAI,EAAd,CAAJ;AACAD,QAAAA,EAAE,CAAC9E,GAAD,CAAF;AACH,OAHC,CAAF;AAIH,KALK,EAKH,UAAUA,GAAV,EAAe;AACdF,MAAAA,QAAQ,CAACE,GAAD,EAAM6E,CAAN,CAAR;AACH,KAPK,CAAN;AAQH,GAVD;;AAWA9G,EAAAA,KAAK,CAACiD,MAAN,GAAeR,UAAU,CAACoE,OAAD,CAAzB;AACA7G,EAAAA,KAAK,CAACiH,YAAN,GAAqB/D,QAAQ,CAAC2D,OAAD,CAA7B;;AAEA7G,EAAAA,KAAK,CAACkH,MAAN,GAAe,UAAUC,IAAV,EAAgB3G,QAAhB,EAA0BuB,QAA1B,EAAoC;AAC/C,QAAIoF,IAAI,EAAR,EAAY;AACR3G,MAAAA,QAAQ,CAAC,UAAUyB,GAAV,EAAe;AACpB,YAAIA,GAAJ,EAAS;AACL,iBAAOF,QAAQ,CAACE,GAAD,CAAf;AACH;;AACDjC,QAAAA,KAAK,CAACkH,MAAN,CAAaC,IAAb,EAAmB3G,QAAnB,EAA6BuB,QAA7B;AACH,OALO,CAAR;AAMH,KAPD,MAQK;AACDA,MAAAA,QAAQ;AACX;AACJ,GAZD;;AAcA/B,EAAAA,KAAK,CAACoH,KAAN,GAAc,UAAUD,IAAV,EAAgB3G,QAAhB,EAA0BuB,QAA1B,EAAoC;AAC9C,QAAI,CAACoF,IAAI,EAAT,EAAa;AACT3G,MAAAA,QAAQ,CAAC,UAAUyB,GAAV,EAAe;AACpB,YAAIA,GAAJ,EAAS;AACL,iBAAOF,QAAQ,CAACE,GAAD,CAAf;AACH;;AACDjC,QAAAA,KAAK,CAACoH,KAAN,CAAYD,IAAZ,EAAkB3G,QAAlB,EAA4BuB,QAA5B;AACH,OALO,CAAR;AAMH,KAPD,MAQK;AACDA,MAAAA,QAAQ;AACX;AACJ,GAZD;;AAcA/B,EAAAA,KAAK,CAACqH,KAAN,GAAc,UAAUC,MAAV,EAAkBC,WAAlB,EAA+B;AACzC,QAAIC,OAAO,GAAG,CAAd;AACA,QAAIC,CAAC,GAAG;AACJlC,MAAAA,KAAK,EAAE,EADH;AAEJgC,MAAAA,WAAW,EAAEA,WAFT;AAGJG,MAAAA,SAAS,EAAE,IAHP;AAIJC,MAAAA,KAAK,EAAE,IAJH;AAKJC,MAAAA,KAAK,EAAE,IALH;AAMJ3G,MAAAA,IAAI,EAAE,UAAU4G,IAAV,EAAgB9F,QAAhB,EAA0B;AAC5B,YAAG8F,IAAI,CAACnB,WAAL,KAAqB/D,KAAxB,EAA+B;AAC3BkF,UAAAA,IAAI,GAAG,CAACA,IAAD,CAAP;AACH;;AACDvH,QAAAA,QAAQ,CAACuH,IAAD,EAAO,UAAS/B,IAAT,EAAe;AAC1B2B,UAAAA,CAAC,CAAClC,KAAF,CAAQtE,IAAR,CAAa;AACT4G,YAAAA,IAAI,EAAE/B,IADG;AAET/D,YAAAA,QAAQ,EAAE,OAAOA,QAAP,KAAoB,UAApB,GAAiCA,QAAjC,GAA4C;AAF7C,WAAb;;AAIA,cAAI0F,CAAC,CAACC,SAAF,IAAeD,CAAC,CAAClC,KAAF,CAAQ5E,MAAR,IAAkB4G,WAArC,EAAkD;AAC9CE,YAAAA,CAAC,CAACC,SAAF;AACH;;AACD1H,UAAAA,KAAK,CAAC4B,QAAN,CAAe6F,CAAC,CAAC9F,OAAjB;AACH,SATO,CAAR;AAUH,OApBG;AAqBJA,MAAAA,OAAO,EAAE,YAAY;AACjB,YAAI6F,OAAO,GAAGC,CAAC,CAACF,WAAZ,IAA2BE,CAAC,CAAClC,KAAF,CAAQ5E,MAAvC,EAA+C;AAC3C,cAAImF,IAAI,GAAG2B,CAAC,CAAClC,KAAF,CAAQuC,KAAR,EAAX;AACA,cAAGL,CAAC,CAACE,KAAF,IAAWF,CAAC,CAAClC,KAAF,CAAQ5E,MAAR,IAAkB,CAAhC,EAAmC8G,CAAC,CAACE,KAAF;AACnCH,UAAAA,OAAO,IAAI,CAAX;AACAF,UAAAA,MAAM,CAACxB,IAAI,CAAC+B,IAAN,EAAY,YAAY;AAC1BL,YAAAA,OAAO,IAAI,CAAX;;AACA,gBAAI1B,IAAI,CAAC/D,QAAT,EAAmB;AACf+D,cAAAA,IAAI,CAAC/D,QAAL,CAAciB,KAAd,CAAoB8C,IAApB,EAA0B/C,SAA1B;AACH;;AACD,gBAAG0E,CAAC,CAACG,KAAF,IAAWH,CAAC,CAAClC,KAAF,CAAQ5E,MAAR,GAAiB6G,OAAjB,IAA4B,CAA1C,EAA6CC,CAAC,CAACG,KAAF;AAC7CH,YAAAA,CAAC,CAAC9F,OAAF;AACH,WAPK,CAAN;AAQH;AACJ,OAnCG;AAoCJhB,MAAAA,MAAM,EAAE,YAAY;AAChB,eAAO8G,CAAC,CAAClC,KAAF,CAAQ5E,MAAf;AACH,OAtCG;AAuCJ4B,MAAAA,OAAO,EAAE,YAAY;AACjB,eAAOiF,OAAP;AACH;AAzCG,KAAR;AA2CA,WAAOC,CAAP;AACH,GA9CD;;AAgDA,MAAIM,WAAW,GAAG,UAAUC,IAAV,EAAgB;AAC9B,WAAO,UAAUnG,EAAV,EAAc;AACjB,UAAIa,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAX;AACAlB,MAAAA,EAAE,CAACmB,KAAH,CAAS,IAAT,EAAeN,IAAI,CAACO,MAAL,CAAY,CAAC,UAAUhB,GAAV,EAAe;AACvC,YAAIS,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAX;;AACA,YAAI,OAAOkF,OAAP,KAAmB,WAAvB,EAAoC;AAChC,cAAIhG,GAAJ,EAAS;AACL,gBAAIgG,OAAO,CAACC,KAAZ,EAAmB;AACfD,cAAAA,OAAO,CAACC,KAAR,CAAcjG,GAAd;AACH;AACJ,WAJD,MAKK,IAAIgG,OAAO,CAACD,IAAD,CAAX,EAAmB;AACpB1H,YAAAA,QAAQ,CAACoC,IAAD,EAAO,UAAU3B,CAAV,EAAa;AACxBkH,cAAAA,OAAO,CAACD,IAAD,CAAP,CAAcjH,CAAd;AACH,aAFO,CAAR;AAGH;AACJ;AACJ,OAd0B,CAAZ,CAAf;AAeH,KAjBD;AAkBH,GAnBD;;AAoBAf,EAAAA,KAAK,CAACmI,GAAN,GAAYJ,WAAW,CAAC,KAAD,CAAvB;AACA/H,EAAAA,KAAK,CAACoI,GAAN,GAAYL,WAAW,CAAC,KAAD,CAAvB;AACA;AACJ;AACA;;AAEI/H,EAAAA,KAAK,CAACqI,OAAN,GAAgB,UAAUxG,EAAV,EAAcyG,MAAd,EAAsB;AAClC,QAAInH,IAAI,GAAG,EAAX;AACA,QAAIoH,MAAM,GAAG,EAAb;;AACAD,IAAAA,MAAM,GAAGA,MAAM,IAAI,UAAUvH,CAAV,EAAa;AAC5B,aAAOA,CAAP;AACH,KAFD;;AAGA,QAAIyH,QAAQ,GAAG,YAAY;AACvB,UAAI9F,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAX;AACA,UAAIhB,QAAQ,GAAGW,IAAI,CAAC+F,GAAL,EAAf;AACA,UAAIC,GAAG,GAAGJ,MAAM,CAACtF,KAAP,CAAa,IAAb,EAAmBN,IAAnB,CAAV;;AACA,UAAIgG,GAAG,IAAIvH,IAAX,EAAiB;AACbY,QAAAA,QAAQ,CAACiB,KAAT,CAAe,IAAf,EAAqB7B,IAAI,CAACuH,GAAD,CAAzB;AACH,OAFD,MAGK,IAAIA,GAAG,IAAIH,MAAX,EAAmB;AACpBA,QAAAA,MAAM,CAACG,GAAD,CAAN,CAAYzH,IAAZ,CAAiBc,QAAjB;AACH,OAFI,MAGA;AACDwG,QAAAA,MAAM,CAACG,GAAD,CAAN,GAAc,CAAC3G,QAAD,CAAd;AACAF,QAAAA,EAAE,CAACmB,KAAH,CAAS,IAAT,EAAeN,IAAI,CAACO,MAAL,CAAY,CAAC,YAAY;AACpC9B,UAAAA,IAAI,CAACuH,GAAD,CAAJ,GAAY3F,SAAZ;AACA,cAAI0E,CAAC,GAAGc,MAAM,CAACG,GAAD,CAAd;AACA,iBAAOH,MAAM,CAACG,GAAD,CAAb;;AACA,eAAK,IAAIhI,CAAC,GAAG,CAAR,EAAWiI,CAAC,GAAGlB,CAAC,CAAC9G,MAAtB,EAA8BD,CAAC,GAAGiI,CAAlC,EAAqCjI,CAAC,EAAtC,EAA0C;AACxC+G,YAAAA,CAAC,CAAC/G,CAAD,CAAD,CAAKsC,KAAL,CAAW,IAAX,EAAiBD,SAAjB;AACD;AACJ,SAP0B,CAAZ,CAAf;AAQH;AACJ,KArBD;;AAsBAyF,IAAAA,QAAQ,CAACI,UAAT,GAAsB/G,EAAtB;AACA,WAAO2G,QAAP;AACH,GA9BD;;AAgCAxI,EAAAA,KAAK,CAAC6I,SAAN,GAAkB,UAAUhH,EAAV,EAAc;AAC9B,WAAO,YAAY;AACjB,aAAO,CAACA,EAAE,CAAC+G,UAAH,IAAiB/G,EAAlB,EAAsBmB,KAAtB,CAA4B,IAA5B,EAAkCD,SAAlC,CAAP;AACD,KAFD;AAGD,GAJD;AAMH,CAlrBA,GAAD","sourcesContent":["/*global setTimeout: false, console: false */\n(function () {\n\n    var async = {};\n\n    // global on the server, window in the browser\n    var root = this,\n        previous_async = root.async;\n\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = async;\n    }\n    else {\n        root.async = async;\n    }\n\n    async.noConflict = function () {\n        root.async = previous_async;\n        return async;\n    };\n\n    //// cross-browser compatiblity functions ////\n\n    var _forEach = function (arr, iterator) {\n        if (arr.forEach) {\n            return arr.forEach(iterator);\n        }\n        for (var i = 0; i < arr.length; i += 1) {\n            iterator(arr[i], i, arr);\n        }\n    };\n\n    var _map = function (arr, iterator) {\n        if (arr.map) {\n            return arr.map(iterator);\n        }\n        var results = [];\n        _forEach(arr, function (x, i, a) {\n            results.push(iterator(x, i, a));\n        });\n        return results;\n    };\n\n    var _reduce = function (arr, iterator, memo) {\n        if (arr.reduce) {\n            return arr.reduce(iterator, memo);\n        }\n        _forEach(arr, function (x, i, a) {\n            memo = iterator(memo, x, i, a);\n        });\n        return memo;\n    };\n\n    var _keys = function (obj) {\n        if (Object.keys) {\n            return Object.keys(obj);\n        }\n        var keys = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                keys.push(k);\n            }\n        }\n        return keys;\n    };\n\n    //// exported async module functions ////\n\n    //// nextTick implementation with browser-compatible fallback ////\n    if (typeof process === 'undefined' || !(process.nextTick)) {\n        async.nextTick = function (fn) {\n            setTimeout(fn, 0);\n        };\n    }\n    else {\n        async.nextTick = process.nextTick;\n    }\n\n    async.forEach = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        _forEach(arr, function (x) {\n            iterator(x, function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed === arr.length) {\n                        callback(null);\n                    }\n                }\n            });\n        });\n    };\n\n    async.forEachSeries = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        var iterate = function () {\n            iterator(arr[completed], function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed === arr.length) {\n                        callback(null);\n                    }\n                    else {\n                        iterate();\n                    }\n                }\n            });\n        };\n        iterate();\n    };\n\n    async.forEachLimit = function (arr, limit, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length || limit <= 0) {\n            return callback();\n        }\n        var completed = 0;\n        var started = 0;\n        var running = 0;\n\n        (function replenish () {\n            if (completed === arr.length) {\n                return callback();\n            }\n\n            while (running < limit && started < arr.length) {\n                started += 1;\n                running += 1;\n                iterator(arr[started - 1], function (err) {\n                    if (err) {\n                        callback(err);\n                        callback = function () {};\n                    }\n                    else {\n                        completed += 1;\n                        running -= 1;\n                        if (completed === arr.length) {\n                            callback();\n                        }\n                        else {\n                            replenish();\n                        }\n                    }\n                });\n            }\n        })();\n    };\n\n\n    var doParallel = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.forEach].concat(args));\n        };\n    };\n    var doSeries = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.forEachSeries].concat(args));\n        };\n    };\n\n\n    var _asyncMap = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (err, v) {\n                results[x.index] = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, results);\n        });\n    };\n    async.map = doParallel(_asyncMap);\n    async.mapSeries = doSeries(_asyncMap);\n\n\n    // reduce only has a series version, as doing reduce in parallel won't\n    // work in many situations.\n    async.reduce = function (arr, memo, iterator, callback) {\n        async.forEachSeries(arr, function (x, callback) {\n            iterator(memo, x, function (err, v) {\n                memo = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, memo);\n        });\n    };\n    // inject alias\n    async.inject = async.reduce;\n    // foldl alias\n    async.foldl = async.reduce;\n\n    async.reduceRight = function (arr, memo, iterator, callback) {\n        var reversed = _map(arr, function (x) {\n            return x;\n        }).reverse();\n        async.reduce(reversed, memo, iterator, callback);\n    };\n    // foldr alias\n    async.foldr = async.reduceRight;\n\n    var _filter = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.filter = doParallel(_filter);\n    async.filterSeries = doSeries(_filter);\n    // select alias\n    async.select = async.filter;\n    async.selectSeries = async.filterSeries;\n\n    var _reject = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (!v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.reject = doParallel(_reject);\n    async.rejectSeries = doSeries(_reject);\n\n    var _detect = function (eachfn, arr, iterator, main_callback) {\n        eachfn(arr, function (x, callback) {\n            iterator(x, function (result) {\n                if (result) {\n                    main_callback(x);\n                    main_callback = function () {};\n                }\n                else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            main_callback();\n        });\n    };\n    async.detect = doParallel(_detect);\n    async.detectSeries = doSeries(_detect);\n\n    async.some = function (arr, iterator, main_callback) {\n        async.forEach(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (v) {\n                    main_callback(true);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(false);\n        });\n    };\n    // any alias\n    async.any = async.some;\n\n    async.every = function (arr, iterator, main_callback) {\n        async.forEach(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (!v) {\n                    main_callback(false);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(true);\n        });\n    };\n    // all alias\n    async.all = async.every;\n\n    async.sortBy = function (arr, iterator, callback) {\n        async.map(arr, function (x, callback) {\n            iterator(x, function (err, criteria) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    callback(null, {value: x, criteria: criteria});\n                }\n            });\n        }, function (err, results) {\n            if (err) {\n                return callback(err);\n            }\n            else {\n                var fn = function (left, right) {\n                    var a = left.criteria, b = right.criteria;\n                    return a < b ? -1 : a > b ? 1 : 0;\n                };\n                callback(null, _map(results.sort(fn), function (x) {\n                    return x.value;\n                }));\n            }\n        });\n    };\n\n    async.auto = function (tasks, callback) {\n        callback = callback || function () {};\n        var keys = _keys(tasks);\n        if (!keys.length) {\n            return callback(null);\n        }\n\n        var results = {};\n\n        var listeners = [];\n        var addListener = function (fn) {\n            listeners.unshift(fn);\n        };\n        var removeListener = function (fn) {\n            for (var i = 0; i < listeners.length; i += 1) {\n                if (listeners[i] === fn) {\n                    listeners.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        var taskComplete = function () {\n            _forEach(listeners.slice(0), function (fn) {\n                fn();\n            });\n        };\n\n        addListener(function () {\n            if (_keys(results).length === keys.length) {\n                callback(null, results);\n                callback = function () {};\n            }\n        });\n\n        _forEach(keys, function (k) {\n            var task = (tasks[k] instanceof Function) ? [tasks[k]]: tasks[k];\n            var taskCallback = function (err) {\n                if (err) {\n                    callback(err);\n                    // stop subsequent errors hitting callback multiple times\n                    callback = function () {};\n                }\n                else {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    taskComplete();\n                }\n            };\n            var requires = task.slice(0, Math.abs(task.length - 1)) || [];\n            var ready = function () {\n                return _reduce(requires, function (a, x) {\n                    return (a && results.hasOwnProperty(x));\n                }, true) && !results.hasOwnProperty(k);\n            };\n            if (ready()) {\n                task[task.length - 1](taskCallback, results);\n            }\n            else {\n                var listener = function () {\n                    if (ready()) {\n                        removeListener(listener);\n                        task[task.length - 1](taskCallback, results);\n                    }\n                };\n                addListener(listener);\n            }\n        });\n    };\n\n    async.waterfall = function (tasks, callback) {\n        callback = callback || function () {};\n        if (!tasks.length) {\n            return callback();\n        }\n        var wrapIterator = function (iterator) {\n            return function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    var next = iterator.next();\n                    if (next) {\n                        args.push(wrapIterator(next));\n                    }\n                    else {\n                        args.push(callback);\n                    }\n                    async.nextTick(function () {\n                        iterator.apply(null, args);\n                    });\n                }\n            };\n        };\n        wrapIterator(async.iterator(tasks))();\n    };\n\n    async.parallel = function (tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor === Array) {\n            async.map(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            async.forEach(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.series = function (tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor === Array) {\n            async.mapSeries(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            async.forEachSeries(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.iterator = function (tasks) {\n        var makeCallback = function (index) {\n            var fn = function () {\n                if (tasks.length) {\n                    tasks[index].apply(null, arguments);\n                }\n                return fn.next();\n            };\n            fn.next = function () {\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n            };\n            return fn;\n        };\n        return makeCallback(0);\n    };\n\n    async.apply = function (fn) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return function () {\n            return fn.apply(\n                null, args.concat(Array.prototype.slice.call(arguments))\n            );\n        };\n    };\n\n    var _concat = function (eachfn, arr, fn, callback) {\n        var r = [];\n        eachfn(arr, function (x, cb) {\n            fn(x, function (err, y) {\n                r = r.concat(y || []);\n                cb(err);\n            });\n        }, function (err) {\n            callback(err, r);\n        });\n    };\n    async.concat = doParallel(_concat);\n    async.concatSeries = doSeries(_concat);\n\n    async.whilst = function (test, iterator, callback) {\n        if (test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.whilst(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.until = function (test, iterator, callback) {\n        if (!test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.until(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.queue = function (worker, concurrency) {\n        var workers = 0;\n        var q = {\n            tasks: [],\n            concurrency: concurrency,\n            saturated: null,\n            empty: null,\n            drain: null,\n            push: function (data, callback) {\n                if(data.constructor !== Array) {\n                    data = [data];\n                }\n                _forEach(data, function(task) {\n                    q.tasks.push({\n                        data: task,\n                        callback: typeof callback === 'function' ? callback : null\n                    });\n                    if (q.saturated && q.tasks.length == concurrency) {\n                        q.saturated();\n                    }\n                    async.nextTick(q.process);\n                });\n            },\n            process: function () {\n                if (workers < q.concurrency && q.tasks.length) {\n                    var task = q.tasks.shift();\n                    if(q.empty && q.tasks.length == 0) q.empty();\n                    workers += 1;\n                    worker(task.data, function () {\n                        workers -= 1;\n                        if (task.callback) {\n                            task.callback.apply(task, arguments);\n                        }\n                        if(q.drain && q.tasks.length + workers == 0) q.drain();\n                        q.process();\n                    });\n                }\n            },\n            length: function () {\n                return q.tasks.length;\n            },\n            running: function () {\n                return workers;\n            }\n        };\n        return q;\n    };\n\n    var _console_fn = function (name) {\n        return function (fn) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            fn.apply(null, args.concat([function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (typeof console !== 'undefined') {\n                    if (err) {\n                        if (console.error) {\n                            console.error(err);\n                        }\n                    }\n                    else if (console[name]) {\n                        _forEach(args, function (x) {\n                            console[name](x);\n                        });\n                    }\n                }\n            }]));\n        };\n    };\n    async.log = _console_fn('log');\n    async.dir = _console_fn('dir');\n    /*async.info = _console_fn('info');\n    async.warn = _console_fn('warn');\n    async.error = _console_fn('error');*/\n\n    async.memoize = function (fn, hasher) {\n        var memo = {};\n        var queues = {};\n        hasher = hasher || function (x) {\n            return x;\n        };\n        var memoized = function () {\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            var key = hasher.apply(null, args);\n            if (key in memo) {\n                callback.apply(null, memo[key]);\n            }\n            else if (key in queues) {\n                queues[key].push(callback);\n            }\n            else {\n                queues[key] = [callback];\n                fn.apply(null, args.concat([function () {\n                    memo[key] = arguments;\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                      q[i].apply(null, arguments);\n                    }\n                }]));\n            }\n        };\n        memoized.unmemoized = fn;\n        return memoized;\n    };\n\n    async.unmemoize = function (fn) {\n      return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n      };\n    };\n\n}());\n"]},"metadata":{},"sourceType":"script"}