{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamj\\\\OneDrive\\\\Desktop\\\\crwn-clothing-app\\\\src\\\\routes\\\\category\\\\category.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ProductCard from '../../components/product-card/product-card.component';\nimport { selectCategoriesIsLoading, selectCategoriesMap } from '../../store/categories/category.selector';\nimport { CategoryContainer, Title } from './category.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = () => {\n  _s();\n\n  const {\n    category\n  } = useParams();\n  const categoriesMap = useSelector(selectCategoriesMap);\n  const isLoading = useSelector(selectCategoriesIsLoadingg);\n  const [products, setProducts] = useState(categoriesMap[category]);\n  useEffect(() => {\n    setProducts(categoriesMap[category]);\n  }, [category, categoriesMap]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: category.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoryContainer, {\n      children: products && products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n        product: product\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Category, \"fytdOPTyZ4zJsSB2KGYrdsj5gq0=\", false, function () {\n  return [useParams, useSelector, useSelector];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["C:/Users/adamj/OneDrive/Desktop/crwn-clothing-app/src/routes/category/category.component.jsx"],"names":["useState","useEffect","Fragment","useSelector","useParams","ProductCard","selectCategoriesIsLoading","selectCategoriesMap","CategoryContainer","Title","Category","category","categoriesMap","isLoading","selectCategoriesIsLoadingg","products","setProducts","toUpperCase","map","product","id"],"mappings":";;;AAAA,SAAUA,QAAV,EAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,yBAAT,EAAoCC,mBAApC,QAA+D,0CAA/D;AAEA,SAASC,iBAAT,EAA4BC,KAA5B,QAAyC,mBAAzC;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAeP,SAAS,EAA9B;AACA,QAAMQ,aAAa,GAAGT,WAAW,CAACI,mBAAD,CAAjC;AACA,QAAMM,SAAS,GAAGV,WAAW,CAACW,0BAAD,CAA7B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAACY,aAAa,CAACD,QAAD,CAAd,CAAxC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,WAAW,CAACJ,aAAa,CAACD,QAAD,CAAd,CAAX;AACD,GAFQ,EAEN,CAACA,QAAD,EAAWC,aAAX,CAFM,CAAT;AAIA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,KAAD;AAAA,gBAAQD,QAAQ,CAACM,WAAT;AAAR;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,iBAAD;AAAA,gBACGF,QAAQ,IACPA,QAAQ,CAACG,GAAT,CAAcC,OAAD,iBACX,QAAC,WAAD;AAA8B,QAAA,OAAO,EAAEA;AAAvC,SAAkBA,OAAO,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CArBD;;GAAMV,Q;UACiBN,S,EACCD,W,EACJA,W;;;KAHdO,Q;AAuBN,eAAeA,QAAf","sourcesContent":["import {  useState, useEffect, Fragment } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport ProductCard from '../../components/product-card/product-card.component';\r\n\r\nimport { selectCategoriesIsLoading, selectCategoriesMap } from '../../store/categories/category.selector'\r\n\r\nimport { CategoryContainer, Title } from './category.styles';\r\n\r\nconst Category = () => {\r\n  const { category } = useParams();\r\n  const categoriesMap = useSelector(selectCategoriesMap)\r\n  const isLoading = useSelector(selectCategoriesIsLoadingg)\r\n  const [products, setProducts] = useState(categoriesMap[category]);\r\n\r\n  useEffect(() => {\r\n    setProducts(categoriesMap[category]);\r\n  }, [category, categoriesMap]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Title>{category.toUpperCase()}</Title>\r\n      <CategoryContainer>\r\n        {products &&\r\n          products.map((product) => (\r\n            <ProductCard key={product.id} product={product} />\r\n          ))}\r\n      </CategoryContainer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Category;"]},"metadata":{},"sourceType":"module"}