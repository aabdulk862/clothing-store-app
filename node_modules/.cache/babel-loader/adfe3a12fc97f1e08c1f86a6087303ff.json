{"ast":null,"code":"import { compose, createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootReducer } from './root-reducer';\nimport { rootSaga } from './root-saga';\nconst sagaMiddleware = createSagaMiddleware();\nconst middleWares = [process.env.NODE_ENV === 'development' && logger, sagaMiddleware].filter(Boolean);\nconst composeEnhancer = process.env.NODE_ENV !== 'production' && window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['user']\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst composedEnhancers = composeEnhancer(applyMiddleware(...middleWares));\nexport const store = createStore(persistedReducer, undefined, composedEnhancers);\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["C:/Users/adamj/OneDrive/Desktop/crwn-clothing-app/src/store/store.ts"],"names":["compose","createStore","applyMiddleware","persistStore","persistReducer","storage","logger","createSagaMiddleware","rootReducer","rootSaga","sagaMiddleware","middleWares","process","env","NODE_ENV","filter","Boolean","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","persistConfig","key","blacklist","persistedReducer","composedEnhancers","store","undefined","run","persistor"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,WAAlB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAClBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CR,MADxB,EAElBI,cAFkB,EAGlBK,MAHkB,CAGXC,OAHW,CAApB;AAKA,MAAMC,eAAe,GAClBL,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IACCI,MADD,IAECA,MAAM,CAACC,oCAFT,IAGAnB,OAJF;AAMA,MAAMoB,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBhB,EAAAA,OAFoB;AAGpBiB,EAAAA,SAAS,EAAE,CAAC,MAAD;AAHS,CAAtB;AAMA,MAAMC,gBAAgB,GAAGnB,cAAc,CAACgB,aAAD,EAAgBZ,WAAhB,CAAvC;AAEA,MAAMgB,iBAAiB,GAAGP,eAAe,CAACf,eAAe,CAAC,GAAGS,WAAJ,CAAhB,CAAzC;AAEA,OAAO,MAAMc,KAAK,GAAGxB,WAAW,CAC9BsB,gBAD8B,EAE9BG,SAF8B,EAG9BF,iBAH8B,CAAzB;AAMPd,cAAc,CAACiB,GAAf,CAAmBlB,QAAnB;AAEA,OAAO,MAAMmB,SAAS,GAAGzB,YAAY,CAACsB,KAAD,CAA9B","sourcesContent":["import { compose, createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { rootReducer } from './root-reducer';\nimport { rootSaga } from './root-saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleWares = [\n  process.env.NODE_ENV === 'development' && logger,\n  sagaMiddleware,\n].filter(Boolean);\n\nconst composeEnhancer =\n  (process.env.NODE_ENV !== 'production' &&\n    window &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['user'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composedEnhancers = composeEnhancer(applyMiddleware(...middleWares));\n\nexport const store = createStore(\n  persistedReducer,\n  undefined,\n  composedEnhancers\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}