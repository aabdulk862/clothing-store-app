{"ast":null,"code":"'use strict';\n\nvar util = require('util');\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar Transaction = require('./transaction');\n\nvar async = require('async');\n\nvar Class = require('./class');\n\nvar over = require('over');\n\nvar Connection = Class.extend({\n  init: function (driver, opts) {\n    this.driver = driver;\n    this.opts = opts || {};\n  },\n  save: function (obj, callback) {\n    var self = this;\n\n    if (obj instanceof Array) {\n      if (obj.length === 0) {\n        callback(null);\n      } else {\n        this.save(obj[0], function (err) {\n          if (err) {\n            callback(err);\n            return;\n          }\n\n          self.save(obj.slice(1), callback);\n        });\n      }\n\n      return;\n    }\n\n    this._save(true, obj, callback);\n  },\n  update: function (obj, callback) {\n    var self = this;\n\n    if (obj instanceof Array) {\n      if (obj.length === 0) {\n        callback(null);\n      } else {\n        this.update(obj[0], function (err) {\n          if (err) {\n            callback(err);\n            return;\n          }\n\n          self.update(obj.slice(1), callback);\n        });\n      }\n\n      return;\n    }\n\n    this._save(false, obj, callback);\n  },\n  _save: function (isNew, obj, callback) {\n    var self = this;\n\n    if (obj.validate && typeof obj.validate === 'function') {\n      return obj.validate(function (success, message) {\n        if (success) {\n          return doModelValidation();\n        }\n\n        return callback(new Error(\"Validation failed: \" + message));\n      });\n    } else {\n      return doModelValidation();\n    }\n\n    function doModelValidation() {\n      if (obj._getModel().validate) {\n        return obj._getModel().validate(obj, function (success, message) {\n          if (success) {\n            return doSave();\n          }\n\n          return callback(new Error(\"Validation failed: \" + message));\n        });\n      } else {\n        return doSave();\n      }\n    }\n\n    function doOnSave(callback) {\n      if (obj._getModel().onSave) {\n        return obj._getModel().onSave(obj, self, callback);\n      }\n\n      callback();\n    }\n\n    function doSave() {\n      doOnSave(function () {\n        obj._getModel().emit(\"beforeSave\", obj);\n\n        if (isNew) {\n          obj._getModel().emit(\"beforeCreate\", obj);\n        } else {\n          obj._getModel().emit(\"beforeUpdate\", obj);\n        }\n\n        var sqlAndValues;\n\n        if (isNew) {\n          sqlAndValues = self.driver.getInsertSql(obj);\n        } else {\n          sqlAndValues = self.driver.getUpdateSql(obj);\n        }\n\n        self._runSql(sqlAndValues.sql, sqlAndValues.values, function (err, data) {\n          if (err) {\n            callback(err);\n            return;\n          }\n\n          if (isNew && data.lastId) {\n            var idPropName = obj._getModel().getIdPropertyName();\n\n            obj[idPropName] = data.lastId;\n          }\n\n          obj._getConnection = function () {\n            return self;\n          }; // hide from JSON.stringify\n\n\n          obj._isPersisted = function () {\n            return true;\n          };\n\n          self.saveAssociations(obj, function (err, obj) {\n            if (isNew) {\n              obj._getModel().emit(\"afterCreate\", obj);\n\n              obj._getModel().emit(\"afterSave\", obj);\n            } else {\n              obj._getModel().emit(\"afterUpdate\", obj);\n\n              obj._getModel().emit(\"afterSave\", obj);\n            }\n\n            callback.apply(self, arguments);\n          });\n        });\n      });\n    }\n  },\n  updatePartial: function (model, id, data, callback) {\n    function doOnSave(callback) {\n      if (model.onSave) {\n        return model.onSave(data, self, callback);\n      }\n\n      callback();\n    }\n\n    var self = this;\n    doOnSave(function () {\n      var sqlAndValues = self.driver.getUpdatePartialSql(model, id, data);\n\n      self._runSql(sqlAndValues.sql, sqlAndValues.values, callback);\n    });\n  },\n  chain: function (tasks, chainCallback) {\n    var self = this;\n\n    if (tasks instanceof Array) {\n      async.mapSeries(tasks, function (item, callback) {\n        if (typeof item === 'function') {\n          item.call(item, self, callback);\n        } else {\n          callback(new Error('Invalid item for chaining.'));\n        }\n      }, chainCallback);\n    } else {\n      var items = [];\n      var key;\n\n      for (key in tasks) {\n        items.push({\n          key: key,\n          task: tasks[key]\n        });\n      }\n\n      async.mapSeries(items, function (item, callback) {\n        item.task.call(item.task, self, function (err, value) {\n          if (err) {\n            callback(err);\n            return;\n          }\n\n          var v = {\n            key: item.key,\n            value: value\n          };\n          callback(null, v);\n        });\n      }, function (err, items) {\n        if (err) {\n          chainCallback(err);\n          return;\n        }\n\n        var results = {};\n        var i;\n\n        for (i = 0; i < items.length; i++) {\n          results[items[i].key] = items[i].value;\n        }\n\n        chainCallback(null, results);\n      });\n    }\n  },\n  saveAssociation: function (obj, name, association, callback) {\n    var self = this;\n\n    if (association.type === 'hasMany' && obj['_' + name] && association.through) {\n      var relatedObjs = obj['_' + name];\n\n      var Query = require('./query'); // late bind query because it causes a circular reference\n\n\n      new Query(this, association.through).where(association.foreignKey + \" = ?\", obj.getId()).deleteAll(function (err, deleteCallback) {\n        async.forEachSeries(relatedObjs, function (relatedObj, saveRelatedObjCallback) {\n          var sqlAndValues = self.driver.getManyToManyInsertSql(association, obj, relatedObj);\n\n          self._runSql(sqlAndValues.sql, sqlAndValues.values, saveRelatedObjCallback);\n        }, callback);\n      });\n    } else {\n      callback(null);\n    }\n  },\n  saveAssociations: function (obj, callback) {\n    var self = this;\n    var associations = [];\n    var name;\n\n    for (name in obj._getModel().associations) {\n      associations.push({\n        name: name,\n        association: obj._getModel().associations[name]\n      });\n    }\n\n    async.forEachSeries(associations, function (association, saveAssociationCallback) {\n      self.saveAssociation(obj, association.name, association.association, saveAssociationCallback);\n    }, function (err) {\n      callback(err, obj);\n    });\n  },\n  each: function (sqlTree, callback, doneCallback) {\n    var self = this;\n    var sqlAndValues = this.driver.getSqlFromSqlTree(sqlTree);\n\n    this._runSqlEach(sqlAndValues.sql, sqlAndValues.values, function (err, data) {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      var obj = sqlTree.toObject(data);\n\n      obj._getConnection = function () {\n        return self;\n      }; // hide from JSON.stringify\n\n\n      callback(null, obj);\n    }, function () {\n      if (doneCallback) {\n        doneCallback();\n      }\n    });\n  },\n  _resultsArrayGetById: function (model, array, id) {\n    var i;\n\n    for (i = 0; i < array.length; i++) {\n      var itemId = array[i].getId();\n\n      if (itemId === id) {\n        return array[i];\n      }\n    }\n\n    return null;\n  },\n  _augmentResultsArrayWithHelpers: function (model, array) {\n    array.getById = this._resultsArrayGetById.bind(this, model, array);\n  },\n  all: function (sqlTree, callback) {\n    var self = this;\n    var sqlAndValues = this.driver.getSqlFromSqlTree(sqlTree);\n\n    if (self.opts.trace) {\n      console.log(sqlAndValues.sql, sqlAndValues.values);\n    }\n\n    this._runSqlAll(sqlAndValues.sql, sqlAndValues.values, function (err, data) {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      var objs = sqlTree.toObjects(data); // add connections to all the objects\n\n      var i;\n\n      var selfFunc = function () {\n        return self;\n      };\n\n      for (i = 0; i < objs.length; i++) {\n        objs[i]._getConnection = selfFunc; // hide from JSON.stringify\n      }\n\n      if (typeof sqlTree.model === \"function\") {\n        self._augmentResultsArrayWithHelpers(sqlTree.model(), objs);\n      }\n\n      callback(null, objs);\n    });\n  },\n  single: function (sqlTree, fieldName, callback) {\n    var self = this;\n    var sqlAndValues = this.driver.getSqlFromSqlTree(sqlTree);\n\n    this._runSqlAll(sqlAndValues.sql, sqlAndValues.values, function (err, data) {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(null, data[0][fieldName]);\n    });\n  },\n  // filename, values, callback\n  // filename, callback\n  runSqlFromFile: over([[over.string, over.arrayOptionalWithDefault(null), over.callbackOptional, function (filename, params, callback) {\n    this._readSqlFile(filename, function (err, sql) {\n      if (err) {\n        return callback(err);\n      }\n\n      self.runSql(sql, params, callback);\n    });\n  }]]),\n  runSqlAllFromFile: function (filename, params, callback) {\n    var self = this;\n\n    if (arguments.length === 2) {\n      return this.runSqlAllFromFile(filename, null, arguments[1]);\n    }\n\n    this._readSqlFile(filename, function (err, sql) {\n      if (err) {\n        return callback(err);\n      }\n\n      self.runSqlAll(sql, params, callback);\n    });\n  },\n  runSqlEachFromFile: function (filename, params, rowCallback, doneCallback) {\n    var self = this;\n\n    if (arguments.length === 3) {\n      return this.runSqlEachFromFile(filename, null, arguments[1], arguments[2]);\n    }\n\n    this._readSqlFile(filename, function (err, sql) {\n      if (err) {\n        return callback(err);\n      }\n\n      self.runSqlEach(sql, params, callback);\n    });\n  },\n  _readSqlFile: function (filename, callback) {\n    async.detect([filename, filename + '.sql', path.join(this.opts.sqlDir, filename), path.join(this.opts.sqlDir, filename) + '.sql'], fs.exists, function (fname) {\n      if (!fname) {\n        return callback(new Error(\"Could not find SQL file. \" + filename));\n      }\n\n      fs.readFile(fname, 'utf8', function (err, sql) {\n        if (err) {\n          return callback(new Error('Could not read SQL file. ' + filename + '. ' + err));\n        }\n\n        return callback(null, sql);\n      });\n    });\n  },\n  // [sql, ...], values, callback\n  // [sql, ...], callback\n  // sql, values, callback\n  // sql, callback\n  runSql: function () {\n    var self = this;\n    var args = arguments; // todo: there has to be a better way to handle this mess.\n    // todo: when it's an array the results to callback should be an array of results.\n\n    if (arguments[0] instanceof Array) {\n      var runSqlCallback = args[arguments.length - 1];\n\n      if (typeof runSqlCallback !== \"function\") {\n        runSqlCallback = function () {};\n      }\n\n      async.mapSeries(arguments[0], function (item, callback) {\n        if (args.length === 2) {\n          self._runSql(item, callback);\n        } else if (args.length === 3) {\n          self._runSql(item, args[1], callback);\n        } else {\n          throw new Error(\"invalid number of arguments\");\n        }\n      }, runSqlCallback);\n      return;\n    }\n\n    var sql = arguments[0];\n    var callback;\n    sql = this.driver._updateSubstitutes(sql);\n\n    if (arguments.length === 2) {\n      // sql, callback\n      callback = arguments[1];\n      return this._runSql(sql, callback);\n    } else if (arguments.length === 3) {\n      // sql, values, callback\n      var values = arguments[1];\n      callback = arguments[2];\n      return this._runSql(sql, values, callback);\n    }\n  },\n  // [sql, ...], values, callback\n  // [sql, ...], callback\n  // sql, values, callback\n  // sql, callback\n  _runSql: function () {\n    var self = this;\n    var args = arguments; // todo: there has to be a better way to handle this mess.\n    // todo: when it's an array the results to callback should be an array of results.\n\n    if (arguments[0] instanceof Array) {\n      var runSqlCallback = args[arguments.length - 1];\n\n      if (typeof runSqlCallback !== \"function\") {\n        runSqlCallback = function () {};\n      }\n\n      async.mapSeries(arguments[0], function (item, callback) {\n        if (args.length === 2) {\n          self._runSql(item, callback);\n        } else if (args.length === 3) {\n          self._runSql(item, args[1], callback);\n        } else {\n          throw new Error(\"invalid number of arguments\");\n        }\n      }, runSqlCallback);\n      return;\n    }\n\n    var sql = arguments[0];\n    var callback;\n\n    if (arguments.length === 2) {\n      // sql, callback\n      callback = arguments[arguments.length - 1];\n\n      try {\n        if (self.opts.trace) {\n          console.log(sql);\n        }\n\n        this._runSql2(sql, callback);\n      } catch (ex1) {\n        ex1.sql = sql;\n        ex1.values = null;\n        throw ex1;\n      }\n    } else if (arguments.length === 3) {\n      // sql, values, callback\n      var values = arguments[1];\n      callback = arguments[2];\n\n      try {\n        if (self.opts.trace) {\n          console.log(sql, values);\n        }\n\n        if (values) {\n          this._runSql3(sql, values, callback);\n        } else {\n          this._runSql2(sql, callback);\n        }\n      } catch (ex2) {\n        ex2.sql = sql;\n        ex2.values = values;\n        callback(ex2);\n      }\n    } else {\n      throw new Error(\"Invalid number of arguments\");\n    }\n  },\n  _runSql2: function (sql, callback) {\n    throw new Error(\"Not Implemented\");\n  },\n  _runSql3: function (sql, values, callback) {\n    throw new Error(\"Not Implemented\");\n  },\n  _runSqlAll: function (sql, params, callback) {\n    throw new Error(\"Not Implemented\");\n  },\n  // sql, [callback]\n  // sql, params, [callback]\n  runSqlAll: over([[over.string, over.arrayOptional, over.callbackOptional, function (sql, params, callback) {\n    sql = this.driver._updateSubstitutes(sql, params);\n    return this._runSqlAll(sql, params, callback);\n  }]]),\n  _runSqlEach: function (sql, params, callback, doneCallback) {\n    throw new Error(\"Not Implemented\");\n  },\n  runSqlEach: function (sql, params, callback, doneCallback) {\n    sql = this.driver._updateSubstitutes(sql, params);\n    return this._runSqlEach(sql, params, callback, doneCallback);\n  },\n  close: function () {\n    throw new Error(\"Not Implemented\");\n  },\n  tx: function (callback) {\n    var self = this;\n    this.beginTransaction(function (err) {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(null, new Transaction(self));\n    });\n  },\n  beginTransaction: function (callback) {\n    throw new Error(\"Not Implemented\");\n  },\n  commitTransaction: function (callback) {\n    throw new Error(\"Not Implemented\");\n  },\n  rollbackTransaction: function (callback) {\n    throw new Error(\"Not Implemented\");\n  }\n});\nmodule.exports = Connection;","map":{"version":3,"sources":["C:/Users/adamj/OneDrive/Desktop/crwn-clothing-app/node_modules/persist/lib/connection.js"],"names":["util","require","fs","path","Transaction","async","Class","over","Connection","extend","init","driver","opts","save","obj","callback","self","Array","length","err","slice","_save","update","isNew","validate","success","message","doModelValidation","Error","_getModel","doSave","doOnSave","onSave","emit","sqlAndValues","getInsertSql","getUpdateSql","_runSql","sql","values","data","lastId","idPropName","getIdPropertyName","_getConnection","_isPersisted","saveAssociations","apply","arguments","updatePartial","model","id","getUpdatePartialSql","chain","tasks","chainCallback","mapSeries","item","call","items","key","push","task","value","v","results","i","saveAssociation","name","association","type","through","relatedObjs","Query","where","foreignKey","getId","deleteAll","deleteCallback","forEachSeries","relatedObj","saveRelatedObjCallback","getManyToManyInsertSql","associations","saveAssociationCallback","each","sqlTree","doneCallback","getSqlFromSqlTree","_runSqlEach","toObject","_resultsArrayGetById","array","itemId","_augmentResultsArrayWithHelpers","getById","bind","all","trace","console","log","_runSqlAll","objs","toObjects","selfFunc","single","fieldName","runSqlFromFile","string","arrayOptionalWithDefault","callbackOptional","filename","params","_readSqlFile","runSql","runSqlAllFromFile","runSqlAll","runSqlEachFromFile","rowCallback","runSqlEach","detect","join","sqlDir","exists","fname","readFile","args","runSqlCallback","_updateSubstitutes","_runSql2","ex1","_runSql3","ex2","arrayOptional","close","tx","beginTransaction","commitTransaction","rollbackTransaction","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar util = require('util');\nvar fs = require('fs');\nvar path = require('path');\nvar Transaction = require('./transaction');\nvar async = require('async');\nvar Class = require('./class');\nvar over = require('over');\n\nvar Connection = Class.extend({\n  init: function(driver, opts) {\n    this.driver = driver;\n    this.opts = opts || {};\n  },\n\n  save: function(obj, callback) {\n    var self = this;\n    if (obj instanceof Array) {\n      if (obj.length === 0) {\n        callback(null);\n      } else {\n        this.save(obj[0], function(err) {\n          if (err) {\n            callback(err);\n            return;\n          }\n          self.save(obj.slice(1), callback);\n        });\n      }\n      return;\n    }\n\n    this._save(true, obj, callback);\n  },\n\n  update: function(obj, callback) {\n    var self = this;\n    if (obj instanceof Array) {\n      if (obj.length === 0) {\n        callback(null);\n      } else {\n        this.update(obj[0], function(err) {\n          if (err) {\n            callback(err);\n            return;\n          }\n          self.update(obj.slice(1), callback);\n        });\n      }\n      return;\n    }\n\n    this._save(false, obj, callback);\n  },\n\n  _save: function(isNew, obj, callback) {\n    var self = this;\n\n    if (obj.validate && typeof(obj.validate) === 'function') {\n      return obj.validate(function(success, message) {\n        if (success) {\n          return doModelValidation();\n        }\n        return callback(new Error(\"Validation failed: \" + message));\n      });\n    } else {\n      return doModelValidation();\n    }\n\n    function doModelValidation() {\n      if (obj._getModel().validate) {\n        return obj._getModel().validate(obj, function(success, message) {\n          if (success) {\n            return doSave();\n          }\n          return callback(new Error(\"Validation failed: \" + message));\n        });\n      } else {\n        return doSave();\n      }\n    }\n\n    function doOnSave(callback) {\n      if (obj._getModel().onSave) {\n        return obj._getModel().onSave(obj, self, callback);\n      }\n\n      callback();\n    }\n\n    function doSave() {\n      doOnSave(function() {\n        obj._getModel().emit(\"beforeSave\", obj);\n\n        if (isNew) {\n          obj._getModel().emit(\"beforeCreate\", obj);\n        } else {\n          obj._getModel().emit(\"beforeUpdate\", obj);\n        }\n\n        var sqlAndValues;\n        if (isNew) {\n          sqlAndValues = self.driver.getInsertSql(obj);\n        } else {\n          sqlAndValues = self.driver.getUpdateSql(obj);\n        }\n        self._runSql(sqlAndValues.sql, sqlAndValues.values, function(err, data) {\n          if (err) {\n            callback(err);\n            return;\n          }\n          if (isNew && data.lastId) {\n            var idPropName = obj._getModel().getIdPropertyName();\n            obj[idPropName] = data.lastId;\n          }\n          obj._getConnection = function() { return self; }; // hide from JSON.stringify\n          obj._isPersisted = function() { return true; };\n          self.saveAssociations(obj, function(err, obj) {\n            if (isNew) {\n              obj._getModel().emit(\"afterCreate\", obj);\n              obj._getModel().emit(\"afterSave\", obj);\n            } else {\n              obj._getModel().emit(\"afterUpdate\", obj);\n              obj._getModel().emit(\"afterSave\", obj);\n            }\n\n            callback.apply(self, arguments);\n          });\n        });\n      });\n    }\n  },\n\n  updatePartial: function(model, id, data, callback) {\n    function doOnSave(callback) {\n      if (model.onSave) {\n        return model.onSave(data, self, callback);\n      }\n\n      callback();\n    }\n\n    var self = this;\n\n    doOnSave(function() {\n      var sqlAndValues = self.driver.getUpdatePartialSql(model, id, data);\n      self._runSql(sqlAndValues.sql, sqlAndValues.values, callback);\n    });\n  },\n\n  chain: function(tasks, chainCallback) {\n    var self = this;\n    if (tasks instanceof Array) {\n      async.mapSeries(tasks, function(item, callback) {\n        if (typeof (item) === 'function') {\n          item.call(item, self, callback);\n        } else {\n          callback(new Error('Invalid item for chaining.'));\n        }\n      }, chainCallback);\n    } else {\n      var items = [];\n      var key;\n      for (key in tasks) {\n        items.push({ key: key, task: tasks[key] });\n      }\n      async.mapSeries(items, function(item, callback) {\n        item.task.call(item.task, self, function(err, value) {\n          if (err) {\n            callback(err);\n            return;\n          }\n          var v = { key: item.key, value: value };\n          callback(null, v);\n        });\n      }, function(err, items) {\n        if (err) {\n          chainCallback(err);\n          return;\n        }\n        var results = {};\n        var i;\n        for (i = 0; i < items.length; i++) {\n          results[items[i].key] = items[i].value;\n        }\n        chainCallback(null, results);\n      });\n    }\n  },\n\n  saveAssociation: function(obj, name, association, callback) {\n    var self = this;\n    if (association.type === 'hasMany' && obj['_' + name] && association.through) {\n      var relatedObjs = obj['_' + name];\n      var Query = require('./query'); // late bind query because it causes a circular reference\n      new Query(this, association.through)\n        .where(association.foreignKey + \" = ?\", obj.getId())\n        .deleteAll(function(err, deleteCallback) {\n          async.forEachSeries(relatedObjs, function(relatedObj, saveRelatedObjCallback) {\n            var sqlAndValues = self.driver.getManyToManyInsertSql(association, obj, relatedObj);\n            self._runSql(sqlAndValues.sql, sqlAndValues.values, saveRelatedObjCallback);\n          }, callback);\n        });\n    } else {\n      callback(null);\n    }\n  },\n\n  saveAssociations: function(obj, callback) {\n    var self = this;\n    var associations = [];\n    var name;\n    for (name in obj._getModel().associations) {\n      associations.push({\n        name: name,\n        association: obj._getModel().associations[name]\n      });\n    }\n\n    async.forEachSeries(associations, function(association, saveAssociationCallback) {\n      self.saveAssociation(obj, association.name, association.association, saveAssociationCallback);\n    }, function(err) {\n      callback(err, obj);\n    });\n  },\n\n  each: function(sqlTree, callback, doneCallback) {\n    var self = this;\n    var sqlAndValues = this.driver.getSqlFromSqlTree(sqlTree);\n    this._runSqlEach(sqlAndValues.sql, sqlAndValues.values, function(err, data) {\n      if (err) {\n        callback(err);\n        return;\n      }\n      var obj = sqlTree.toObject(data);\n      obj._getConnection = function() { return self; }; // hide from JSON.stringify\n\n      callback(null, obj);\n    }, function() {\n      if (doneCallback) {\n        doneCallback();\n      }\n    });\n  },\n\n  _resultsArrayGetById: function(model, array, id) {\n    var i;\n    for (i = 0; i < array.length; i++) {\n      var itemId = array[i].getId();\n      if (itemId === id) {\n        return array[i];\n      }\n    }\n    return null;\n  },\n\n  _augmentResultsArrayWithHelpers: function(model, array) {\n    array.getById = this._resultsArrayGetById.bind(this, model, array);\n  },\n\n  all: function(sqlTree, callback) {\n    var self = this;\n    var sqlAndValues = this.driver.getSqlFromSqlTree(sqlTree);\n    if (self.opts.trace) {\n      console.log(sqlAndValues.sql, sqlAndValues.values);\n    }\n    this._runSqlAll(sqlAndValues.sql, sqlAndValues.values, function(err, data) {\n      if (err) {\n        callback(err);\n        return;\n      }\n      var objs = sqlTree.toObjects(data);\n\n      // add connections to all the objects\n      var i;\n      var selfFunc = function() { return self; };\n      for (i = 0; i < objs.length; i++) {\n        objs[i]._getConnection = selfFunc; // hide from JSON.stringify\n      }\n\n      if (typeof (sqlTree.model) === \"function\") {\n        self._augmentResultsArrayWithHelpers(sqlTree.model(), objs);\n      }\n\n      callback(null, objs);\n    });\n  },\n\n  single: function(sqlTree, fieldName, callback) {\n    var self = this;\n    var sqlAndValues = this.driver.getSqlFromSqlTree(sqlTree);\n    this._runSqlAll(sqlAndValues.sql, sqlAndValues.values, function(err, data) {\n      if (err) {\n        callback(err);\n        return;\n      }\n      callback(null, data[0][fieldName]);\n    });\n  },\n\n  // filename, values, callback\n  // filename, callback\n  runSqlFromFile: over([\n    [over.string, over.arrayOptionalWithDefault(null), over.callbackOptional, function(filename, params, callback) {\n      this._readSqlFile(filename, function(err, sql) {\n        if (err) {\n          return callback(err);\n        }\n        self.runSql(sql, params, callback);\n      });\n    }]\n  ]),\n\n  runSqlAllFromFile: function(filename, params, callback) {\n    var self = this;\n    if (arguments.length === 2) {\n      return this.runSqlAllFromFile(filename, null, arguments[1]);\n    }\n    this._readSqlFile(filename, function(err, sql) {\n      if (err) {\n        return callback(err);\n      }\n      self.runSqlAll(sql, params, callback);\n    });\n  },\n\n  runSqlEachFromFile: function(filename, params, rowCallback, doneCallback) {\n    var self = this;\n    if (arguments.length === 3) {\n      return this.runSqlEachFromFile(filename, null, arguments[1], arguments[2]);\n    }\n    this._readSqlFile(filename, function(err, sql) {\n      if (err) {\n        return callback(err);\n      }\n      self.runSqlEach(sql, params, callback);\n    });\n  },\n\n  _readSqlFile: function(filename, callback) {\n    async.detect([\n      filename,\n      filename + '.sql',\n      path.join(this.opts.sqlDir, filename),\n      path.join(this.opts.sqlDir, filename) + '.sql'\n    ], fs.exists, function(fname) {\n      if (!fname) {\n        return callback(new Error(\"Could not find SQL file. \" + filename));\n      }\n      fs.readFile(fname, 'utf8', function(err, sql) {\n        if (err) {\n          return callback(new Error('Could not read SQL file. ' + filename + '. ' + err));\n        }\n        return callback(null, sql);\n      });\n    });\n  },\n\n  // [sql, ...], values, callback\n  // [sql, ...], callback\n  // sql, values, callback\n  // sql, callback\n  runSql: function() {\n    var self = this;\n    var args = arguments;\n    // todo: there has to be a better way to handle this mess.\n    // todo: when it's an array the results to callback should be an array of results.\n    if (arguments[0] instanceof Array) {\n      var runSqlCallback = args[arguments.length - 1];\n      if (typeof (runSqlCallback) !== \"function\") { runSqlCallback = function() {}; }\n\n      async.mapSeries(arguments[0], function(item, callback) {\n        if (args.length === 2) {\n          self._runSql(item, callback);\n        } else if (args.length === 3) {\n          self._runSql(item, args[1], callback);\n        } else {\n          throw new Error(\"invalid number of arguments\");\n        }\n      }, runSqlCallback);\n      return;\n    }\n\n    var sql = arguments[0];\n    var callback;\n    sql = this.driver._updateSubstitutes(sql);\n    if (arguments.length === 2) { // sql, callback\n      callback = arguments[1];\n      return this._runSql(sql, callback);\n    } else if (arguments.length === 3) { // sql, values, callback\n      var values = arguments[1];\n      callback = arguments[2];\n      return this._runSql(sql, values, callback);\n    }\n  },\n\n  // [sql, ...], values, callback\n  // [sql, ...], callback\n  // sql, values, callback\n  // sql, callback\n  _runSql: function() {\n    var self = this;\n    var args = arguments;\n    // todo: there has to be a better way to handle this mess.\n    // todo: when it's an array the results to callback should be an array of results.\n    if (arguments[0] instanceof Array) {\n      var runSqlCallback = args[arguments.length - 1];\n      if (typeof (runSqlCallback) !== \"function\") { runSqlCallback = function() {}; }\n\n      async.mapSeries(arguments[0], function(item, callback) {\n        if (args.length === 2) {\n          self._runSql(item, callback);\n        } else if (args.length === 3) {\n          self._runSql(item, args[1], callback);\n        } else {\n          throw new Error(\"invalid number of arguments\");\n        }\n      }, runSqlCallback);\n      return;\n    }\n\n    var sql = arguments[0];\n    var callback;\n    if (arguments.length === 2) { // sql, callback\n      callback = arguments[arguments.length - 1];\n      try {\n        if (self.opts.trace) {\n          console.log(sql);\n        }\n        this._runSql2(sql, callback);\n      } catch (ex1) {\n        ex1.sql = sql;\n        ex1.values = null;\n        throw ex1;\n      }\n    } else if (arguments.length === 3) { // sql, values, callback\n      var values = arguments[1];\n      callback = arguments[2];\n      try {\n        if (self.opts.trace) {\n          console.log(sql, values);\n        }\n        if (values) {\n          this._runSql3(sql, values, callback);\n        } else {\n          this._runSql2(sql, callback);\n        }\n      } catch (ex2) {\n        ex2.sql = sql;\n        ex2.values = values;\n        callback(ex2);\n      }\n    } else {\n      throw new Error(\"Invalid number of arguments\");\n    }\n  },\n\n  _runSql2: function(sql, callback) {\n    throw new Error(\"Not Implemented\");\n  },\n\n  _runSql3: function(sql, values, callback) {\n    throw new Error(\"Not Implemented\");\n  },\n\n  _runSqlAll: function(sql, params, callback) {\n    throw new Error(\"Not Implemented\");\n  },\n\n  // sql, [callback]\n  // sql, params, [callback]\n  runSqlAll: over([\n    [over.string, over.arrayOptional, over.callbackOptional, function(sql, params, callback) {\n      sql = this.driver._updateSubstitutes(sql, params);\n      return this._runSqlAll(sql, params, callback);\n    }]\n  ]),\n\n  _runSqlEach: function(sql, params, callback, doneCallback) {\n    throw new Error(\"Not Implemented\");\n  },\n\n  runSqlEach: function(sql, params, callback, doneCallback) {\n    sql = this.driver._updateSubstitutes(sql, params);\n    return this._runSqlEach(sql, params, callback, doneCallback);\n  },\n\n  close: function() {\n    throw new Error(\"Not Implemented\");\n  },\n\n  tx: function(callback) {\n    var self = this;\n    this.beginTransaction(function(err) {\n      if (err) {\n        callback(err);\n        return;\n      }\n      callback(null, new Transaction(self));\n    });\n  },\n\n  beginTransaction: function(callback) {\n    throw new Error(\"Not Implemented\");\n  },\n\n  commitTransaction: function(callback) {\n    throw new Error(\"Not Implemented\");\n  },\n\n  rollbackTransaction: function(callback) {\n    throw new Error(\"Not Implemented\");\n  }\n});\n\nmodule.exports = Connection;\n"]},"metadata":{},"sourceType":"script"}