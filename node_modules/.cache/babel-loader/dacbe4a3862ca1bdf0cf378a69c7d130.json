{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamj\\\\OneDrive\\\\Desktop\\\\crwn-clothing-app\\\\src\\\\contexts\\\\cart.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartitem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n\n  if (existingCartitem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }];\n};\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  cartCount: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n  }, [cartItems]);\n\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    cartItems\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"1STVRVZJMMTq6OZavO9o7qwZdno=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/adamj/OneDrive/Desktop/crwn-clothing-app/src/contexts/cart.context.jsx"],"names":["createContext","useState","useEffect","addCartItem","cartItems","productToAdd","existingCartitem","find","cartItem","id","map","quantity","CartContext","isCartOpen","setIsCartOpen","addItemToCart","cartCount","CartProvider","children","setCartItems","setCartCount","newCartCount","reduce","total","value"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;;;AAEA,MAAMC,WAAW,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA4B;AAE5C,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAgBC,QAAD,IAAYA,QAAQ,CAACC,EAAT,KAAgBJ,YAAY,CAACI,EAAxD,CAAzB;;AACA,MAAGH,gBAAH,EACA;AACI,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IACrBA,QAAQ,CAACC,EAAT,KAAgBJ,YAAY,CAACI,EAA7B,GACE,EAAC,GAAGD,QAAJ;AAAcG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAmB;AAA3C,KADF,GACiDH,QAF1C,CAAP;AAGH;;AACD,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAC,GAAGC,YAAJ;AAAkBM,IAAAA,QAAQ,EAAE;AAA5B,GAAf,CAAP;AACH,CAVD;;AAYA,OAAO,MAAMC,WAAW,gBAAGZ,aAAa,CAAC;AACrCa,EAAAA,UAAU,EAAE,KADyB;AAErCC,EAAAA,aAAa,EAAE,MAAK,CAAE,CAFe;AAGrCV,EAAAA,SAAS,EAAE,EAH0B;AAIrCW,EAAAA,aAAa,EAAE,MAAM,CAAE,CAJc;AAKrCC,EAAAA,SAAS,EAAE;AAL0B,CAAD,CAAjC;AAQP,OAAO,MAAMC,YAAY,GAAG,QAAe;AAAA;;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AACvC,QAAM,CAACL,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACG,SAAD,EAAYe,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,SAAD,EAAYI,YAAZ,IAA4BnB,QAAQ,CAAC,CAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMmB,YAAY,GAAGjB,SAAS,CAACkB,MAAV,CAAiB,CAACC,KAAD,EAAOf,QAAP,KAAkBe,KAAK,GAAGf,QAAQ,CAACG,QAApD,EAA6D,CAA7D,CAArB;AACH,GAFQ,EAEP,CAACP,SAAD,CAFO,CAAT;;AAIA,QAAMW,aAAa,GAAIV,YAAD,IAAgB;AAClCc,IAAAA,YAAY,CAAChB,WAAW,CAACC,SAAD,EAAWC,YAAX,CAAZ,CAAZ;AACH,GAFD;;AAGA,QAAMmB,KAAK,GAAG;AAACX,IAAAA,UAAD;AAAYC,IAAAA,aAAZ;AAA2BC,IAAAA,aAA3B;AAA0CX,IAAAA;AAA1C,GAAd;AACA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEoB,KAA7B;AAAA,cAAqCN;AAArC;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAhBM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\n\r\nconst addCartItem = (cartItems, productToAdd) =>{\r\n\r\n    const existingCartitem = cartItems.find((cartItem)=>cartItem.id === productToAdd.id)\r\n    if(existingCartitem)\r\n    {\r\n        return cartItems.map((cartItem)=> \r\n        cartItem.id === productToAdd.id \r\n        ? {...cartItem, quantity: cartItem.quantity +1}: cartItem)    \r\n    }\r\n    return [...cartItems, {...productToAdd, quantity: 1}]\r\n}\r\n\r\nexport const CartContext = createContext({\r\n    isCartOpen: false,\r\n    setIsCartOpen: () =>{},\r\n    cartItems: [],\r\n    addItemToCart: () => {},\r\n    cartCount: 0\r\n})\r\n\r\nexport const CartProvider = ({children}) =>{\r\n    const [isCartOpen, setIsCartOpen] = useState(false);\r\n    const [cartItems, setCartItems] = useState([]);\r\n    const [cartCount, setCartCount] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        const newCartCount = cartItems.reduce((total,cartItem)=>total + cartItem.quantity,0)\r\n    },[cartItems])\r\n\r\n    const addItemToCart = (productToAdd)=>{\r\n        setCartItems(addCartItem(cartItems,productToAdd))\r\n    }\r\n    const value = {isCartOpen,setIsCartOpen, addItemToCart, cartItems};\r\n    return(\r\n        <CartContext.Provider value={value}>{children}</CartContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}