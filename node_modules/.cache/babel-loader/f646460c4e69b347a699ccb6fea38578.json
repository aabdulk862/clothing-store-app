{"ast":null,"code":"import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport { USER_ACTION_TYPES } from \"./user.types\";\nimport { signInSuccess, signInFailed } from \"./user.action\";\nimport { getCurrentUser, createUserDocumentFromAuth } from \"../../utils/firebase/firebase.utils\";\nexport function* getSnapshotFromUserAuth(userAuth, additionalDetails) {\n  try {\n    const userSnapshot = yield call(createUserDocumentFromAuth, userAuth, additionalDetails);\n    console.log(userSnapshot);\n    console.log(userSnapshot.data());\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield call(getCurrentUser);\n    if (!userAuth) return;\n    yield call(getSnapshotFromUserAuth, userAuth);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* userSagas() {\n  yield all([call(onCheckUserSession)]);\n}","map":{"version":3,"sources":["C:/Users/adamj/OneDrive/Desktop/crwn-clothing-app/src/store/user/user.saga.js"],"names":["takeLatest","call","put","all","USER_ACTION_TYPES","signInSuccess","signInFailed","getCurrentUser","createUserDocumentFromAuth","getSnapshotFromUserAuth","userAuth","additionalDetails","userSnapshot","console","log","data","error","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,iBAAT,QAAkC,cAAlC;AAEA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,eAA5C;AAEA,SACEC,cADF,EAEEC,0BAFF,QAGO,qCAHP;AAKA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4CC,iBAA5C,EAA+D;AACpE,MAAI;AACF,UAAMC,YAAY,GAAG,MAAMX,IAAI,CAC7BO,0BAD6B,EAE7BE,QAF6B,EAG7BC,iBAH6B,CAA/B;AAKAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAY,CAACG,IAAb,EAAZ;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMd,GAAG,CAACI,YAAY,CAACU,KAAD,CAAb,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,MAAI;AACF,UAAMP,QAAQ,GAAG,MAAMT,IAAI,CAACM,cAAD,CAA3B;AACA,QAAI,CAACG,QAAL,EAAe;AACf,UAAMT,IAAI,CAACQ,uBAAD,EAA0BC,QAA1B,CAAV;AACD,GAJD,CAIE,OAAOM,KAAP,EAAc;AACd,UAAMd,GAAG,CAACI,YAAY,CAACU,KAAD,CAAb,CAAT;AACD;AACF;AAED,OAAO,UAAUE,kBAAV,GAA+B;AACpC,QAAMlB,UAAU,CAACI,iBAAiB,CAACe,kBAAnB,EAAuCF,mBAAvC,CAAhB;AACD;AAED,OAAO,UAAUG,SAAV,GAAsB;AAC3B,QAAMjB,GAAG,CAAC,CAACF,IAAI,CAACiB,kBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, put, all } from \"redux-saga/effects\";\r\n\r\nimport { USER_ACTION_TYPES } from \"./user.types\";\r\n\r\nimport { signInSuccess, signInFailed } from \"./user.action\";\r\n\r\nimport {\r\n  getCurrentUser,\r\n  createUserDocumentFromAuth,\r\n} from \"../../utils/firebase/firebase.utils\";\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalDetails) {\r\n  try {\r\n    const userSnapshot = yield call(\r\n      createUserDocumentFromAuth,\r\n      userAuth,\r\n      additionalDetails\r\n    );\r\n    console.log(userSnapshot);\r\n    console.log(userSnapshot.data());\r\n  } catch (error) {\r\n    yield put(signInFailed(error));\r\n  }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield call(getCurrentUser);\r\n    if (!userAuth) return;\r\n    yield call(getSnapshotFromUserAuth, userAuth);\r\n  } catch (error) {\r\n    yield put(signInFailed(error));\r\n  }\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([call(onCheckUserSession)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}