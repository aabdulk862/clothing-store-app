{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch } from \"firebase/firestore\"; // Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD4m--GCpT96-NpqmqXJe36Wk4PZWmWt5M\",\n  authDomain: \"react-clothing-store-db1.firebaseapp.com\",\n  projectId: \"react-clothing-store-db1\",\n  storageBucket: \"react-clothing-store-db1.appspot.com\",\n  messagingSenderId: \"170319196547\",\n  appId: \"1:170319196547:web:109b6f60f23f52d40686b6\"\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  promt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log(\"done\");\n};\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInfo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInfo\n      });\n    } catch (error) {\n      console.log(\"error creating the user\", error.message);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => {\n  onAuthStateChanged(auth, callback);\n};","map":{"version":3,"sources":["C:/Users/adamj/OneDrive/Desktop/crwn-clothing-app/src/utils/firebase/firebase.utils.js"],"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","promt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","createUserDocumentFromAuth","userAuth","additionalInfo","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"mappings":"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","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  signInWithRedirect,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\nimport {\r\n  getFirestore,\r\n  doc,\r\n  getDoc,\r\n  setDoc,\r\n  collection,\r\n  writeBatch,\r\n} from \"firebase/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD4m--GCpT96-NpqmqXJe36Wk4PZWmWt5M\",\r\n  authDomain: \"react-clothing-store-db1.firebaseapp.com\",\r\n  projectId: \"react-clothing-store-db1\",\r\n  storageBucket: \"react-clothing-store-db1.appspot.com\",\r\n  messagingSenderId: \"170319196547\",\r\n  appId: \"1:170319196547:web:109b6f60f23f52d40686b6\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({\r\n  promt: \"select_account\",\r\n});\r\n\r\nexport const auth = getAuth();\r\nexport const signInWithGooglePopup = () =>\r\n  signInWithPopup(auth, googleProvider);\r\nexport const signInWithGoogleRedirect = () =>\r\n  signInWithRedirect(auth, googleProvider);\r\n\r\nexport const db = getFirestore();\r\n\r\nexport const addCollectionAndDocuments = async (\r\n  collectionKey,\r\n  objectsToAdd\r\n) => {\r\n  const collectionRef = collection(db, collectionKey);\r\n  const batch = writeBatch(db);\r\n\r\n  objectsToAdd.forEach((object) => {\r\n    const docRef = doc(collectionRef, object.title.toLowerCase());\r\n    batch.set(docRef, object);\r\n  });\r\n\r\n  await batch.commit();\r\n  console.log(\"done\");\r\n};\r\n\r\nexport const createUserDocumentFromAuth = async (\r\n  userAuth,\r\n  additionalInfo = {}\r\n) => {\r\n  if (!userAuth) return;\r\n  const userDocRef = doc(db, \"users\", userAuth.uid);\r\n  const userSnapshot = await getDoc(userDocRef);\r\n\r\n  if (!userSnapshot.exists()) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await setDoc(userDocRef, {\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalInfo,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error creating the user\", error.message);\r\n    }\r\n  }\r\n\r\n  return userDocRef;\r\n};\r\n\r\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n\r\n  return await createUserWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n\r\n  return await signInWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signOutUser = async () => await signOut(auth);\r\n\r\nexport const onAuthStateChangedListener = (callback) => {\r\n  onAuthStateChanged(auth, callback);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}