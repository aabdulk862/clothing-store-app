{"ast":null,"code":"import { compose, createStore, applyMiddleware } from \"redux\"; // import logger from \"redux-logger\";\n\nimport { rootReducer } from \"./root-reducer\";\n\nconst loggerMiddleware = store => next => action => {\n  if (!action.type) {\n    return next(action);\n  }\n\n  console.log('type: ', action.type);\n  console.log('payload: ', action.payload);\n  console.log('currentState: ', store.getState());\n  next(action);\n  console.log('next state: ', store.getState());\n};\n\nconst middleWares = [loggerMiddleware];\nconst composedEnhancers = compose(applyMiddleware(...middleWares)); // root-reducer\n\nexport const store = createStore(rootReducer, undefined, composedEnhancers);","map":{"version":3,"sources":["C:/Users/adamj/OneDrive/Desktop/crwn-clothing-app/src/store/store.js"],"names":["compose","createStore","applyMiddleware","rootReducer","loggerMiddleware","store","next","action","type","console","log","payload","getState","middleWares","composedEnhancers","undefined"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,WAAlB,EAA+BC,eAA/B,QAAsD,OAAtD,C,CACA;;AAEA,SAASC,WAAT,QAA4B,gBAA5B;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAYC,IAAD,IAAUC,MAAD,IAAW;AACpD,MAAG,CAACA,MAAM,CAACC,IAAX,EAAgB;AACZ,WAAOF,IAAI,CAACC,MAAD,CAAX;AACH;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAM,CAACC,IAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,MAAM,CAACI,OAAhC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,KAAK,CAACO,QAAN,EAA9B;AAEAN,EAAAA,IAAI,CAACC,MAAD,CAAJ;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,KAAK,CAACO,QAAN,EAA5B;AACH,CAZD;;AAcA,MAAMC,WAAW,GAAG,CAACT,gBAAD,CAApB;AAEA,MAAMU,iBAAiB,GAAGd,OAAO,CAACE,eAAe,CAAC,GAAGW,WAAJ,CAAhB,CAAjC,C,CAEA;;AACA,OAAO,MAAMR,KAAK,GAAGJ,WAAW,CAACE,WAAD,EAAcY,SAAd,EAAyBD,iBAAzB,CAAzB","sourcesContent":["import { compose, createStore, applyMiddleware } from \"redux\";\r\n// import logger from \"redux-logger\";\r\n\r\nimport { rootReducer } from \"./root-reducer\";\r\n\r\nconst loggerMiddleware = (store) => (next) =>(action) =>{\r\n    if(!action.type){\r\n        return next(action)\r\n    }\r\n\r\n    console.log('type: ', action.type);\r\n    console.log('payload: ', action.payload);\r\n    console.log('currentState: ', store.getState());\r\n\r\n    next(action);\r\n\r\n    console.log('next state: ', store.getState());\r\n}\r\n\r\nconst middleWares = [loggerMiddleware]\r\n\r\nconst composedEnhancers = compose(applyMiddleware(...middleWares))\r\n\r\n// root-reducer\r\nexport const store = createStore(rootReducer, undefined, composedEnhancers);\r\n"]},"metadata":{},"sourceType":"module"}