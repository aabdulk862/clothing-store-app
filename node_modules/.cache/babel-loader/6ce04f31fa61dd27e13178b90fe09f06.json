{"ast":null,"code":"import { fetchCategoriesStart, fetchCategoriesSuccess, fetchCategoriesFailed } from './category.action';\nexport const CATEGORIES_INITIAL_STATE = {\n  categories: [],\n  isLoading: false,\n  error: null\n};\nexport const categoriesReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : CATEGORIES_INITIAL_STATE;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (fetchCategoriesStart.match(action)) {\n    return { ...state,\n      isLoading: true\n    };\n  }\n\n  if (fetchCategoriesSuccess.match(action)) {\n    return { ...state,\n      isLoading: false,\n      categories: action.payload\n    };\n  }\n\n  if (fetchCategoriesFailed.match(action)) {\n    return { ...state,\n      isLoading: false,\n      error: action.payload\n    };\n  }\n\n  return;\n};","map":{"version":3,"sources":["C:/Users/adamj/OneDrive/Desktop/crwn-clothing-app/src/store/categories/category.reducer.ts"],"names":["fetchCategoriesStart","fetchCategoriesSuccess","fetchCategoriesFailed","CATEGORIES_INITIAL_STATE","categories","isLoading","error","categoriesReducer","state","action","match","payload"],"mappings":"AAIA,SAAyBA,oBAAzB,EAA+CC,sBAA/C,EAAuEC,qBAAvE,QAAoG,mBAApG;AAQA,OAAO,MAAMC,wBAAyC,GAAG;AACvDC,EAAAA,UAAU,EAAE,EAD2C;AAEvDC,EAAAA,SAAS,EAAE,KAF4C;AAGvDC,EAAAA,KAAK,EAAE;AAHgD,CAAlD;AAMP,OAAO,MAAMC,iBAAiB,GAAG,YAGX;AAAA,MAFpBC,KAEoB,uEAFZL,wBAEY;AAAA,MADpBM,MACoB,uEADX,EACW;;AACnB,MAAGT,oBAAoB,CAACU,KAArB,CAA2BD,MAA3B,CAAH,EAAsC;AACrC,WAAO,EAAC,GAAGD,KAAJ;AAAWH,MAAAA,SAAS,EAAE;AAAtB,KAAP;AACA;;AACD,MAAGJ,sBAAsB,CAACS,KAAvB,CAA6BD,MAA7B,CAAH,EAAwC;AACvC,WAAO,EAAE,GAAGD,KAAL;AAAYH,MAAAA,SAAS,EAAE,KAAvB;AAA8BD,MAAAA,UAAU,EAAEK,MAAM,CAACE;AAAjD,KAAP;AACA;;AACD,MAAGT,qBAAqB,CAACQ,KAAtB,CAA4BD,MAA5B,CAAH,EAAuC;AACtC,WAAO,EAAE,GAAGD,KAAL;AAAYH,MAAAA,SAAS,EAAE,KAAvB;AAA8BC,MAAAA,KAAK,EAAEG,MAAM,CAACE;AAA5C,KAAP;AACA;;AACJ;AACC,CAdM","sourcesContent":["import { AnyAction } from 'redux';\n\nimport { CATEGORIES_ACTION_TYPES, Category } from './category.types';\n\nimport { CategoryAction, fetchCategoriesStart, fetchCategoriesSuccess, fetchCategoriesFailed } from './category.action';\n\nexport type CategoriesState = {\n  readonly categories: Category[];\n  readonly isLoading: boolean;\n  readonly error: Error | null;\n};\n\nexport const CATEGORIES_INITIAL_STATE: CategoriesState = {\n  categories: [],\n  isLoading: false,\n  error: null,\n};\n\nexport const categoriesReducer = (\n  state = CATEGORIES_INITIAL_STATE,\n  action = {} as AnyAction\n): CategoriesState => {\n   if(fetchCategoriesStart.match(action)){\n    return {...state, isLoading: true};\n   }\n   if(fetchCategoriesSuccess.match(action)){\n    return { ...state, isLoading: false, categories: action.payload };\n   }\n   if(fetchCategoriesFailed.match(action)){\n    return { ...state, isLoading: false, error: action.payload };\n   }\nreturn \n};\n"]},"metadata":{},"sourceType":"module"}