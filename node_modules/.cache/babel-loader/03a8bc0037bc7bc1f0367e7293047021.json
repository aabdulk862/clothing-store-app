{"ast":null,"code":"import { setIsCartOpen } from './cart.action';\nimport { CART_ACTION_TYPES } from './cart.types';\nconst CART_INITIAL_STATE = {\n  isCartOpen: false,\n  cartItems: []\n};\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : CART_INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (setIsCartOpen.match(action)) {\n    return { ...state,\n      isCartOpen: action.payload\n    };\n  }\n\n  switch (type) {\n    case CART_ACTION_TYPES.SET_CART_ITEMS:\n      return { ...state,\n        cartItems: payload\n      };\n\n    case CART_ACTION_TYPES.SET_IS_CART_OPEN:\n      return { ...state,\n        isCartOpen: payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/adamj/OneDrive/Desktop/crwn-clothing-app/src/store/cart/cart.reducer.ts"],"names":["setIsCartOpen","CART_ACTION_TYPES","CART_INITIAL_STATE","isCartOpen","cartItems","cartReducer","state","action","match","payload","type","SET_CART_ITEMS","SET_IS_CART_OPEN"],"mappings":"AAEA,SAAuBA,aAAvB,QAA4C,eAA5C;AAEA,SAASC,iBAAT,QAA4C,cAA5C;AAOA,MAAMC,kBAA6B,GAAG;AACpCC,EAAAA,UAAU,EAAE,KADwB;AAEpCC,EAAAA,SAAS,EAAE;AAFyB,CAAtC;AAKA,OAAO,MAAMC,WAAW,GAAG,YAA8D;AAAA,MAA7DC,KAA6D,uEAArDJ,kBAAqD;AAAA,MAAjCK,MAAiC;;AACvF,MAAGP,aAAa,CAACQ,KAAd,CAAoBD,MAApB,CAAH,EAA+B;AAC7B,WAAO,EAAC,GAAGD,KAAJ;AAAWH,MAAAA,UAAU,EAAEI,MAAM,CAACE;AAA9B,KAAP;AACD;;AAED,UAAQC,IAAR;AACE,SAAKT,iBAAiB,CAACU,cAAvB;AACE,aAAO,EACL,GAAGL,KADE;AAELF,QAAAA,SAAS,EAAEK;AAFN,OAAP;;AAIF,SAAKR,iBAAiB,CAACW,gBAAvB;AACE,aAAO,EACL,GAAGN,KADE;AAELH,QAAAA,UAAU,EAAEM;AAFP,OAAP;;AAIF;AACE,aAAOH,KAAP;AAZJ;AAcD,CAnBM","sourcesContent":["import { AnyAction } from 'redux';\n\nimport { setCartItems, setIsCartOpen } from './cart.action';\n\nimport { CART_ACTION_TYPES, CartItem } from './cart.types';\n\nexport type CartState = {\n  isCartOpen: boolean;\n  cartItems: CartItem[];\n}\n\nconst CART_INITIAL_STATE: CartState = {\n  isCartOpen: false,\n  cartItems: [],\n};\n\nexport const cartReducer = (state = CART_INITIAL_STATE, action: AnyAction): CartState => {\n  if(setIsCartOpen.match(action)){\n    return {...state, isCartOpen: action.payload}; \n  }\n\n  switch (type) {\n    case CART_ACTION_TYPES.SET_CART_ITEMS:\n      return {\n        ...state,\n        cartItems: payload,\n      };\n    case CART_ACTION_TYPES.SET_IS_CART_OPEN:\n      return {\n        ...state,\n        isCartOpen: payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}